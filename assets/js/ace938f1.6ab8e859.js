"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[552],{5593:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var r=t(5893),s=t(1151),o=t(2969);const i={sidebar_position:999},c="(Deprecated) React Redux",a={id:"react/deprecated-react-redux",title:"(Deprecated) React Redux",description:"State management store for React.",source:"@site/docs/react/deprecated-react-redux.mdx",sourceDirName:"react",slug:"/react/deprecated-react-redux",permalink:"/Notesaurus/docs/react/deprecated-react-redux",draft:!1,unlisted:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/react/deprecated-react-redux.mdx",tags:[],version:"current",sidebarPosition:999,frontMatter:{sidebar_position:999},sidebar:"tutorialSidebar",previous:{title:"React i18n",permalink:"/Notesaurus/docs/react/react-i18n"},next:{title:"(Deprecated) Redux Thunk",permalink:"/Notesaurus/docs/react/deprecated-react-thunk"}},d={},l=[{value:"Reference",id:"reference",level:3},{value:"Step by Step Guide",id:"step-by-step-guide",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"deprecated-react-redux",children:"(Deprecated) React Redux"}),"\n",(0,r.jsxs)(n.p,{children:["State management ",(0,r.jsx)(n.strong,{children:"store"})," for React."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)("img",{src:"https://redux.js.org/assets/images/ReduxDataFlowDiagram-49fa8c3968371d9ef6f2a1486bd40a26.gif",width:"350"}),"\n",(0,r.jsxs)(n.p,{children:["From ",(0,r.jsx)(n.a,{href:"https://redux.js.org/tutorials/fundamentals/part-2-concepts-data-flow",children:"Redux Concepts and Data Flow in Redux official site"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-console",children:"npm install react-redux\nnpm install redux\n"})}),"\n",(0,r.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://react-redux.js.org/",children:"React Redux offical site"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://redux.js.org/",children:"Redux offical site"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://thoughtbot.com/blog/using-redux-with-react-hooks",children:"Using Redux with React Hooks"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://redux.js.org/tutorials/essentials/part-1-overview-concepts",children:"Basic Concepts behind Redux"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/49568073/react-context-vs-react-redux-when-should-i-use-each-one",children:"Why use redux and not React Context "})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,r.jsx)(o.Z,{color:"#dd0000",children:"Deprecated"}),"\n",(0,r.jsxs)(n.p,{children:["Please follow the approach in ",(0,r.jsx)(n.a,{href:"https://redux-toolkit.js.org/usage/usage-guide",children:"Redux Toolkit"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.strong,{children:"createStore"})," to ",(0,r.jsx)(n.strong,{children:"create the redux store"})," (At this moment, ignore the parameter rootReducer, we will have it in step 3)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/rootStore.js"',children:"import { createStore } from 'redux'\nimport rootReducer from './rootReducer.js'\nexport default store = createStore(rootReducer);\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/index.js"',children:"import store from './rootStore.js'\nexport { store };\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Wrap the app component with ",(0,r.jsx)(n.strong,{children:"Provider"})," and pass the redux store to it. This way the ",(0,r.jsx)(n.strong,{children:"whole app can access the redux store.App.js"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import {Provider} from 'react-redux'\nimport {store} from './src/store'\n...\nconst App = () => {\n...\nreturn (\n    <Provider store={store}>\n    ...\n    </Provider>\n);\n};\nexport default App;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Prepare the reducer"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/login/LoginReducer.js"',children:'const defaultLogin = \n{\n    status: "",\n    returnCode: "",\n    msg: "",\n    userId: "",\n    sessionId: ""\n};\n\nconst successLogin = \n{\n    status: "SUCCESS",\n    returnCode: "0",\n    msg: "LOGIN SUCCESS",\n    userId: "S5627",\n    sessionId: "34567894567890"\n};\n\nconst LoginReducer = (state = { loginSession: defaultLogin } , action) => {\n\n    if (action.type === \'LOGIN\'){\n\n        return { loginSession: successLogin };\n\n    }\n    else if  (action.type === \'LOGOUT\'){\n\n        return { loginSession: defaultLogin };\n\n    }\n    return state;\n}\n\nexport default LoginReducer;\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Combine all the reducers as root reducer with ",(0,r.jsx)(n.strong,{children:"combineReducer"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/login/LoginReducer.js"',children:"import { combineReducers } from 'redux'\nimport { LoginReducer } from './login'\n\nconst rootReducer = combineReducers({  \n    LoginReducer\n})\n\nexport default rootReducer;\n"})}),"\n",(0,r.jsx)(n.p,{children:"and passed to redux store (This is done in step 1)"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Prepare the ",(0,r.jsx)(n.strong,{children:"action creator"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/login/LoginAction.js"',children:"const LoginAction = ({ userId, password }) => { \n    return {\n    type: 'LOGIN',\n    payload: {                        \n        userId,\n        password\n    },\n    };\n}\n\nconst LogoutAction = () => { \n    return {\n    type: 'LOGOUT',\n    payload: {                        \n    },\n    };\n}\nexport { LoginAction, LogoutAction }\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use React Hook ",(0,r.jsx)(n.strong,{children:"useSelector"})," to ",(0,r.jsx)(n.strong,{children:"select and get redux store state data"})," in a component.Note we simply set the tree path ",(0,r.jsx)(n.strong,{children:"state.LoginReducer.loginSession.userId"})," in the hook, this way the hook will select that piece of data."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/login/LoginAction.js"',children:"import { useSelector } from 'react-redux'\n\nconst PortfolioScreen = () => {\n    const userId = useSelector(state => state.LoginReducer.loginSession.userId);\n    return (\n        <View style={styles.container}>\n\n        { userId === '' ? \n            <Text>Please Login</Text>\n        : \n            <Text>Hi {userId}, this is your portfolio.</Text>\n        }\n        </View>\n    );\n};\n\nexport default PortfolioScreen;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Use React Hook ",(0,r.jsx)(n.strong,{children:"setDispatch"})," to ",(0,r.jsx)(n.strong,{children:"dispatch the action to corresponding reducer"})," triggered by a event of a component (such as press event in the example below).This way ",(0,r.jsx)(n.strong,{children:"reducer will calculate the new state data"}),", which will be ",(0,r.jsx)(n.strong,{children:"(automatically without additional code) saved in redux store"}),". And the ",(0,r.jsx)(n.strong,{children:"component will (automatically without additional code) rerender itself for the new state"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/store/login/LoginScreen.js"',children:'...\nimport { useDispatch } from "react-redux";\n...\n\nconst LoginScreen = () => {\n...\n    const userId = useSelector(state => state.LoginReducer.loginSession.userId);\n    const dispatch = useDispatch();\n\n    return (\n        <View style={styles.container}>\n\n        { userId === \'\' ? \n            <>\n            <Text>Login</Text>\n            <Button\n                onPress={() => dispatch(LoginAction(\'\',\'\'))}\n                title="Login"\n                color="#FF0000"\n            />\n            </>\n        : \n            <>\n            <Text>Logout</Text>\n            <Button\n                onPress={() => dispatch(LogoutAction())}\n                title="Logout"\n                color="#EEEEEE"\n            />\n            </>\n        }\n        </View>\n        \n    );\n};\n\nexport default LoginScreen;\n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},2969:(e,n,t)=>{t.d(n,{Z:()=>s});t(7294);var r=t(5893);function s(e){let{children:n,color:t}=e;return(0,r.jsx)("span",{style:{backgroundColor:t,borderRadius:"2px",color:"#fff",padding:"0.2rem"},children:n})}},1151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>i});var r=t(7294);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);