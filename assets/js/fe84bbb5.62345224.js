"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[2410],{2113:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=n(5893),o=n(1151);const r={sidebar_position:7},s="Secure with TLS",a={id:"spring-boot/tls",title:"Secure with TLS",description:"Step by Step Guide",source:"@site/docs/spring-boot/tls.md",sourceDirName:"spring-boot",slug:"/spring-boot/tls",permalink:"/Notesaurus/docs/spring-boot/tls",draft:!1,unlisted:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/tls.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Profile",permalink:"/Notesaurus/docs/spring-boot/profile"},next:{title:"JPA Authentication",permalink:"/Notesaurus/docs/spring-boot/security"}},l={},c=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Key generation and keystore",id:"1-key-generation-and-keystore",level:3},{value:"2. Add configuration",id:"2-add-configuration",level:3},{value:"Supporting Self Signed Certificates",id:"supporting-self-signed-certificates",level:2},{value:"1. Create trust store",id:"1-create-trust-store",level:3},{value:"2. Configure SSLContextBuilder in <code>Apache HttpClient</code>",id:"2-configure-sslcontextbuilder-in-apache-httpclient",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"secure-with-tls",children:"Secure with TLS"}),"\n",(0,i.jsx)(t.h2,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,i.jsx)(t.h3,{id:"1-key-generation-and-keystore",children:"1. Key generation and keystore"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"keytool -genkeypair -alias demo-service --keyalg RSA -keysize 2048 -keystore keystore-demo.jks -validity 3650 -storepass demo1234\nkeytool -list -keystore keystore-demo.jks -storepass demo1234\n"})}),"\n",(0,i.jsx)(t.h3,{id:"2-add-configuration",children:"2. Add configuration"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yml",metastring:'title="application.yml"',children:"server:\n  port: 18080\n  {/* highlight-start */}\n  ssl:\n    key-store: classpath:keystore-demo.jks\n    key-alias: demo-service\n    key-store-password: demo1234\n    key-store-type: JKS\n    enabled: true\n  {/* highlight-end */}\n"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",metastring:'title="pom.yml"',children:"<plugins> \n  <plugin>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-maven-plugin</artifactId>\n  </plugin>\n  <plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-resources-plugin</artifactId>\n    <version>3.1.0</version>\n      {/* highlight-start */}\n    <configuration>\n      <nonFilteredFileExtensions>\n        <nonFilteredFileExtension>jks</nonFilteredFileExtension>\n      </nonFilteredFileExtensions>\n    </configuration>\n    {/* highlight-end */}\n  </plugin>\n</plugins>\n"})}),"\n",(0,i.jsx)(t.h2,{id:"supporting-self-signed-certificates",children:"Supporting Self Signed Certificates"}),"\n",(0,i.jsx)(t.p,{children:"Self Signed Certificates are often used in internal web sites, development and testing environments.\nNow comes to step by step guide on how the http client trusts the server."}),"\n",(0,i.jsx)(t.h3,{id:"1-create-trust-store",children:"1. Create trust store"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"// Export certificate\nkeytool -export -alias demo-service -keystore keystore-demo.jks -file demo.cer -storepass demo1234\n\n// Import Certificate into Truststore\nkeytool -import -file D:\\demo.cer -alias demo-service -keystore truststore-demo.jks -storepass demo1234\nkeytool -list -keystore truststore-demo.jks -storepass demo1234\n"})}),"\n",(0,i.jsxs)(t.h3,{id:"2-configure-sslcontextbuilder-in-apache-httpclient",children:["2. Configure SSLContextBuilder in ",(0,i.jsx)(t.a,{href:"https://hc.apache.org/httpcomponents-client-5.1.x/",children:(0,i.jsx)(t.code,{children:"Apache HttpClient"})})]}),"\n",(0,i.jsx)(t.p,{children:"By adding loadTrustMaterial(keyStore), the client will trust this self-signed certificate even it cannot be verified via the CA certificate chain."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-java",children:'public static CloseableHttpClient getHttpClient(KeyStore keyStore) throws NoSuchAlgorithmException, KeyManagementException {\n    SSLContext sslContext = null;\n    try {\n        X509Certificate cert = (X509Certificate)keyStore.getCertificate(clientCertAlias);\n        if (cert == null) {\n            throw new KeyManagementException("No key alias \'" + clientCertAlias + "\' found in key store, cannot authenticate to server");\n        }\n        {/* highlight-start */}\n        SSLContextBuilder sslContextBuilder = SSLContexts.custom().loadTrustMaterial(keyStore);\n         {/* highlight-end */}\n        sslContext = sslContextBuilder.build();\n\n    } catch (KeyStoreException e) {\n        throw new KeyManagementException(e.getMessage(),e);\n    }\n    {/* highlight-start */}\n    X509HostnameVerifier x509HostnameVerifier = SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER;\n    {/* highlight-end */}\n    SSLConnectionSocketFactory sslConnectionSocketFactory = new SSLConnectionSocketFactory(\n            sslContext,\n            {/* highlight-start */}\n            new String[]{"TLSv1.3"},\n            {/* highlight-end */}\n            null,\n            x509HostnameVerifier);\n\n    Registry<ConnectionSocketFactory> registry = RegistryBuilder.<ConnectionSocketFactory>create()\n            .register("https", sslConnectionSocketFactory)\n            .register("http", new PlainConnectionSocketFactory())\n            .build();\n\n    PoolingHttpClientConnectionManager connectionManager = new PoolingHttpClientConnectionManager(registry);\n\n    connectionManager.setMaxTotal(40);\n    connectionManager.setDefaultMaxPerRoute(5);\n    return HttpClients.custom().setConnectionManager(connectionManager).build();\n'})}),"\n",(0,i.jsxs)(t.admonition,{type:"danger",children:[(0,i.jsx)(t.p,{children:"By default, exception will be thrown if self signed certificate is found to be used during SSL handshake process:"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"javax.net.ssl.SSLHandshakeException: PKIX path building failed: \n              sun.security.provider.certpath.SunCertPathBuilderException:             \n              unable to find valid certification path to requested target\n"})})]})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>s});var i=n(7294);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);