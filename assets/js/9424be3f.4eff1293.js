"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[5030],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>m});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=t.createContext({}),s=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=s(e.components);return t.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),m=i,g=u["".concat(p,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(g,a(a({ref:n},c),{},{components:r})):t.createElement(g,a({ref:n},c))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6072:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=r(7462),i=(r(7294),r(3905));const o={sidebar_position:6},a="Lesson 5:  Profile",l={unversionedId:"spring-boot/profile",id:"spring-boot/profile",title:"Lesson 5:  Profile",description:"We can build for different environments (or other purposes) based on profiles.",source:"@site/docs/spring-boot/profile.md",sourceDirName:"spring-boot",slug:"/spring-boot/profile",permalink:"/Notesaurus/docs/spring-boot/profile",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/profile.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Lesson 4:  JPA",permalink:"/Notesaurus/docs/spring-boot/jpa"},next:{title:"Lesson 0:  Overview",permalink:"/Notesaurus/docs/spring-cloud/overview"}},p={},s=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Add profile in pom.xml",id:"1-add-profile-in-pomxml",level:3},{value:"2. Change application.yml",id:"2-change-applicationyml",level:3},{value:"3. Add application-uat.yml and application-production.yml",id:"3-add-application-uatyml-and-application-productionyml",level:3},{value:"4. Specify profile when building jar or running with maven command",id:"4-specify-profile-when-building-jar-or-running-with-maven-command",level:3}],c={toc:s};function d(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lesson-5--profile"},"Lesson 5:  Profile"),(0,i.kt)("p",null,"We can build for different environments (or other purposes) based on profiles."),(0,i.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,i.kt)("h3",{id:"1-add-profile-in-pomxml"},"1. Add profile in pom.xml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'},"    <profiles>\n        <profile>\n            <id>uat</id>\n            <properties>\n                <spring.profiles.active>uat</spring.profiles.active>\n            </properties>\n        </profile>\n        <profile>\n            <id>production</id>\n            <properties>\n                <spring.profiles.active>production</spring.profiles.active>\n            </properties>\n        </profile>\n    </profiles>\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <excludes>\n                    <exclude>application*.yml</exclude>\n                </excludes>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>true</filtering>\n                <includes>\n                    <include>application.yml</include>\n                    <include>application-${spring.profiles.active}.yml</include>\n                </includes>\n            </resource>\n        </resources>\n    ...\n    </build>\n")),(0,i.kt)("h3",{id:"2-change-applicationyml"},"2. Change application.yml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="application.yml"',title:'"application.yml"'},'spring:\n  profiles:\n    active: "@spring.profiles.active@"\n')),(0,i.kt)("h3",{id:"3-add-application-uatyml-and-application-productionyml"},"3. Add application-uat.yml and application-production.yml"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="application-uat.yml"',title:'"application-uat.yml"'},"spring:\n  application:\n    name: Spring Boot Demo\n  datasource:\n{/* highlight-start */}   \n    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false\n{/* highlight-end */}   \n    username: \n    password: \n    driverClassName: com.mysql.cj.jdbc.Driver\n  jpa:\n    database : MYSQL\n    show-sql : true\n    hibernate:\n      ddl-auto : update\n      naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy\n    properties:\n      hibernate:\n        dialect : org.hibernate.dialect.MySQL8Dialect\n        jdbc:\n          time_zone: GMT+8\n\nserver:\n{/* highlight-start */}   \n  port: 18080\n{/* highlight-end */}     \n  servlet:\n    context-path: /\n\nlogging:\n  level:\n    root:  error\n    org.springframework:  info\n    com.example.demo:  info\n\nswagger:\n  enable: true\n  application-name: ${spring.application.name}\n  application-version: 1.0\n  application-description: ${spring.application.name}\n  try-host: http://localhost:${server.port}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title="application-production.yml"',title:'"application-production.yml"'},"spring:\n  application:\n    name: Spring Boot Demo\n  datasource:\n{/* highlight-start */}   \n    url: jdbc:mysql://localhost:3306/demo_prod?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false\n{/* highlight-end */}   \n    username: \n    password: \n    driverClassName: com.mysql.cj.jdbc.Driver\n  jpa:\n    database : MYSQL\n    show-sql : true\n    hibernate:\n      ddl-auto : update\n      naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy\n    properties:\n      hibernate:\n        dialect : org.hibernate.dialect.MySQL8Dialect\n        jdbc:\n          time_zone: GMT+8\n\nserver:\n{/* highlight-start */}   \n  port: 8080\n{/* highlight-end */}     \n  servlet:\n    context-path: /\n\nlogging:\n  level:\n    root:  error\n    org.springframework:  info\n    com.example.demo:  info\n\nswagger:\n  enable: true\n  application-name: ${spring.application.name}\n  application-version: 1.0\n  application-description: ${spring.application.name}\n  try-host: http://localhost:${server.port}\n")),(0,i.kt)("h3",{id:"4-specify-profile-when-building-jar-or-running-with-maven-command"},"4. Specify profile when building jar or running with maven command"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mvn -Puat clean package spring-boot:repackage\nmvn -Pproduction clean package spring-boot:repackage\nmvn -Puat clean spring-boot:run\nmvn -Pproduction clean spring-boot:run\n")))}d.isMDXComponent=!0}}]);