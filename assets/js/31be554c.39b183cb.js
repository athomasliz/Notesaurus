"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[3820],{5763:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));a(1839);const i={sidebar_position:5},s="Day 4:  JPA",l={unversionedId:"spring-boot/jpa",id:"spring-boot/jpa",title:"Day 4:  JPA",description:"Step by Step Guide",source:"@site/docs/spring-boot/jpa.md",sourceDirName:"spring-boot",slug:"/spring-boot/jpa",permalink:"/Notesaurus/docs/spring-boot/jpa",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/jpa.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Day 3:  Swagger",permalink:"/Notesaurus/docs/spring-boot/swagger"},next:{title:"Day 5:  Profile",permalink:"/Notesaurus/docs/spring-boot/profile"}},o={},p=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Prepare DB and table",id:"1-prepare-db-and-table",level:3},{value:"2. Add Starter",id:"2-add-starter",level:3},{value:"3. Add configuration",id:"3-add-configuration",level:3},{value:"4. Create Entity Class",id:"4-create-entity-class",level:3},{value:"5. Create Repository Class",id:"5-create-repository-class",level:3},{value:"6. Create Service Class",id:"6-create-service-class",level:3},{value:"7. Call mysql service in Rest Controller",id:"7-call-mysql-service-in-rest-controller",level:3},{value:"8. Test in swagger",id:"8-test-in-swagger",level:3}],d={toc:p};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"day-4--jpa"},"Day 4:  JPA"),(0,n.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,n.kt)("h3",{id:"1-prepare-db-and-table"},"1. Prepare DB and table"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Install mysql database.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Create schema demo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Create table mysql"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sql",metastring:'title="We create the table couple to store couple names."',title:'"We',create:!0,the:!0,table:!0,couple:!0,to:!0,store:!0,'names."':!0},"CREATE TABLE mysql (\n  id int NOT NULL,\n  input varchar(255) NOT NULL,\n  output varchar(255) NOT NULL,\n  PRIMARY KEY (id)\n);\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Add a record into table"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"insert into mysql values( 1,  'A', 'B');\n")))),(0,n.kt)("h3",{id:"2-add-starter"},"2. Add Starter"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'},"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>8.0.32</version>\n</dependency>\n")),(0,n.kt)("h3",{id:"3-add-configuration"},"3. Add configuration"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="application.yml"',title:'"application.yml"'},"spring:\n  application:\n    name: Spring Boot Demo\n{/* highlight-start */}    \n  datasource:\n    url: jdbc:mysql://mysqldb:3307/demo?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false\n    username: xxxxxx\n    password: xxxxxx\n    driverClassName: com.mysql.jdbc.Driver\n  jpa:\n    database : MYSQL\n    show-sql : true\n    hibernate:\n      ddl-auto : update\n      naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy\n    properties:\n      hibernate:\n        dialect : org.hibernate.dialect.MySQL8Dialect\n        jdbc:\n          time_zone: GMT+8  \n{/* highlight-end */}\n")),(0,n.kt)("h3",{id:"4-create-entity-class"},"4. Create Entity Class"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="org.irushu.demo.data.persistence.model.Mysql" showLineNumbers',title:'"org.irushu.demo.data.persistence.model.Mysql"',showLineNumbers:!0},'{/* highlight-start */}   \n@Entity\n@Table(name="mysql")\n{/* highlight-end */} \npublic class Mysql {\n    {/* highlight-start */}  \n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    {/* highlight-end */} \n    private Integer id;\n    {/* highlight-start */}  \n    @Column(name="input", columnDefinition = "varchar(255)")\n    {/* highlight-end */} \n    private String input;\n    {/* highlight-start */}  \n    @Column(name="output", columnDefinition = "varchar(255)")\n    {/* highlight-end */} \n}\n')),(0,n.kt)("h3",{id:"5-create-repository-class"},"5. Create Repository Class"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="org.irushu.demo.data.persistence.repository.MysqlRepository" showLineNumbers',title:'"org.irushu.demo.data.persistence.repository.MysqlRepository"',showLineNumbers:!0},'package org.irushu.demo.data.persistence.repository;\n\nimport org.irushu.demo.data.persistence.model.Mysql;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\n\nimport java.util.List;\n{/* highlight-start */}  \npublic interface MysqlRepository extends JpaRepository<Mysql, String> {\n\n    @Query("SELECT m FROM Mysql m WHERE m.input = :input")\n    List<Mysql> findByInput(@Param("input") String input);\n{/* highlight-end */} \n}\n')),(0,n.kt)("h3",{id:"6-create-service-class"},"6. Create Service Class"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Usually Service Class implements the business logic, and encapsulates the data access logic. "),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="org.irushu.demo.service.MysqlService" showLineNumbers',title:'"org.irushu.demo.service.MysqlService"',showLineNumbers:!0},'@Component\npublic class MysqlService {\n\n    @Autowired\n    private MysqlRepository mysqlRepository;\n\n    public String findByInput(String input){\n        List<Mysql> lMysql = mysqlRepository.findByInput(input);\n\n        if(lMysql !=null && !lMysql.isEmpty()) {\n            return lMysql.get(0).getOutput();\n        }\n        else{\n            return "";\n        }\n    }\n\n}\n'))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Below is the package structure."),(0,n.kt)("p",{parentName:"li"},"  ",(0,n.kt)("img",{alt:"package-structure",src:a(9086).Z,width:"346",height:"287"})))),(0,n.kt)("h3",{id:"7-call-mysql-service-in-rest-controller"},"7. Call mysql service in Rest Controller"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Autowire mysql service in rest controller."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="org.irushu.demo.web.controller.DemoController"',title:'"org.irushu.demo.web.controller.DemoController"'},"@Autowired\nprivate MysqlService mysqlService;\n"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Add the new method ",(0,n.kt)("strong",{parentName:"p"},"findInMysql")," in rest controller."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="org.irushu.demo.web.controller.DemoController" showLineNumbers',title:'"org.irushu.demo.web.controller.DemoController"',showLineNumbers:!0},'@RequestMapping(value = "/findInMysql", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n@Operation(summary = "Find in Mysql", description = "")\npublic DemoResponse findInMysql(@RequestBody DemoRequest demoRequest)\n{\n    DemoResponse demoResponse = new DemoResponse();\n    demoResponse.setOutput(mysqlService.findByInput(demoRequest.getInput()));\n    return demoResponse;\n}\n')))),(0,n.kt)("h3",{id:"8-test-in-swagger"},"8. Test in swagger"))}u.isMDXComponent=!0},9086:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/java-package-structure-ad37da4ebe67d5dbfa1df3d92414812b.PNG"}}]);