"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[432],{9788:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var i=a(7462),n=(a(7294),a(3905));a(2389);var r=a(1839);const l={sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:3},p="Lesson 0: Cryptography 101",o={unversionedId:"cryptography/101",id:"cryptography/101",title:"Lesson 0: Cryptography 101",description:"",source:"@site/docs/cryptography/101.md",sourceDirName:"cryptography",slug:"/cryptography/101",permalink:"/Notesaurus/docs/cryptography/101",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/cryptography/101.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Lesson 2:  Spring Kafka",permalink:"/Notesaurus/docs/kafka/spring-kafka"},next:{title:"Case Study",permalink:"/Notesaurus/docs/cryptography/case-study"}},m={},u=[{value:"Terminology",id:"terminology",level:2},{value:"General",id:"general",level:3},{value:"Hash function",id:"hash-function",level:3},{value:"MAC - Message Authentication Code",id:"mac---message-authentication-code",level:3},{value:"Symmetric cryptography",id:"symmetric-cryptography",level:3},{value:"Key exchange",id:"key-exchange",level:3},{value:"Asymmetric cryptography",id:"asymmetric-cryptography",level:3},{value:"Digital Signature",id:"digital-signature",level:3},{value:"Randomness / Secrets",id:"randomness--secrets",level:3},{value:"<code>TLS</code> Transport layer security",id:"tls-transport-layer-security",level:3},{value:"Email",id:"email",level:3},{value:"Signal Protocol",id:"signal-protocol",level:3},{value:"Vocabuary",id:"vocabuary",level:2},{value:"Please note",id:"please-note",level:2}],k={toc:u};function s(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,i.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"lesson-0-cryptography-101"},"Lesson 0: Cryptography 101"),(0,n.kt)("h2",{id:"terminology"},"Terminology"),(0,n.kt)("h3",{id:"general"},"General"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cryptographic_primitive"},"Primitive")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cryptographic_protocol"},"Protocol")),(0,n.kt)("li",{parentName:"ul"},"Cryptographer"),(0,n.kt)("li",{parentName:"ul"},"Cryptanalyst"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"NIST")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/National_Institute_of_Standards_and_Technology"},"National Institute of Standard and Technology")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"FIPS")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Federal_Information_Processing_Standards"},"Federal Information Processing Standards")),(0,n.kt)("li",{parentName:"ul"},"MITM (Man in the middle) Attack"),(0,n.kt)("li",{parentName:"ul"},"Defense in depth"))),(0,n.kt)("h3",{id:"hash-function"},"Hash function"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"input"},"Input"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Message")),(0,n.kt)("h4",{parentName:"admonition",id:"output"},"Output"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Digest / Hash")),(0,n.kt)("h4",{parentName:"admonition",id:"properties"},"Properties"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Pre-image resistance",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"One way, irreversible"))),(0,n.kt)("li",{parentName:"ul"},"Second pre-image resistance",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Given a fixed input, whether there exists another input that yields the same digest"))),(0,n.kt)("li",{parentName:"ul"},"Collision resistance",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Given any input, there exists a case that 2 inputs yields the same digest"),(0,n.kt)("li",{parentName:"ul"},"Birthday Bound")))),(0,n.kt)("h4",{parentName:"admonition",id:"algorithm"},"Algorithm"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"MD5")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SHA1")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SHA2"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Merkie-Damgard"),(0,n.kt)("li",{parentName:"ul"},"Compression Function"),(0,n.kt)("li",{parentName:"ul"},"Length-extension attacks"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SHA3")," ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Permutation"),(0,n.kt)("li",{parentName:"ul"},"Spongy Construction",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Absorbing"),(0,n.kt)("li",{parentName:"ul"},"Squeezing"))),(0,n.kt)("li",{parentName:"ul"},"Random Oracle"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SHAKE")," ",(0,n.kt)("inlineCode",{parentName:"li"},"cSHAKE")," ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"XOF - extendable output function"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"TupleHash")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Argon2"},(0,n.kt)("inlineCode",{parentName:"a"},"Argon2"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/PBKDF2"},(0,n.kt)("inlineCode",{parentName:"a"},"PBKDF2"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Bcrypt"},(0,n.kt)("inlineCode",{parentName:"a"},"bcrypt"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Scrypt"},(0,n.kt)("inlineCode",{parentName:"a"},"scrypt")))),(0,n.kt)("h4",{parentName:"admonition",id:"attacks"},"Attacks"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Rainbow table"),(0,n.kt)("li",{parentName:"ul"},"Length-extension attacks"))),(0,n.kt)("h3",{id:"mac---message-authentication-code"},"MAC - Message Authentication Code"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"process"},"Process"),(0,n.kt)(r.G,{parentName:"admonition",config:'{"theme":{"light":"neutral","dark":"forest"},"themeVariables":{"lineColor":"#9CCC65"}}',chart:"graph LR;\n    In1[fa:fa-key Secret Key]--\x3efunc[fa:fa-tags HMAC];\n    In2[fa:fa-file-text-o Message]--\x3efunc;\n    func--\x3e Out[fa:fa-tag Authentication Tag];",mdxType:"Mermaid"}),(0,n.kt)("h4",{parentName:"admonition",id:"algorithms"},"Algorithms"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"HMAC",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"SHA2"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HMAC-SHA256")))),(0,n.kt)("li",{parentName:"ul"},"KMAC",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"cSHAKE")))),(0,n.kt)("h4",{parentName:"admonition",id:"attacks-1"},"Attacks"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Timing Attack"),(0,n.kt)("li",{parentName:"ul"},"Replay Attack")),(0,n.kt)("h4",{parentName:"admonition",id:"use-case"},"Use case"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Message Authentication"),(0,n.kt)("li",{parentName:"ul"},"HKDF - HMAC based key derivation function"),(0,n.kt)("li",{parentName:"ul"},"PRF - Pseudorandom function"),(0,n.kt)("li",{parentName:"ul"},"Cookie authentication tag"),(0,n.kt)("li",{parentName:"ul"},"Hash Table (Programming Languages)"))),(0,n.kt)("h3",{id:"symmetric-cryptography"},"Symmetric cryptography"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"aka"},"a.k.a"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Secret Key Cryptography")),(0,n.kt)("h4",{parentName:"admonition",id:"process-1"},"Process"),(0,n.kt)(r.G,{parentName:"admonition",chart:"  flowchart LR;\n      subgraph Decryption\n        direction LR;\n        InD1[fa:fa-key Secret key]--\x3efuncD[fa:fa-unlock Decryption];\n        InD2[fa:fa-th Cipher text]--\x3efuncD;\n        funcD--\x3e OutD[fa:fa-file-text-o Plain text];\n      end    \n      subgraph Encryption\n        direction LR;\n        InE1[fa:fa-key Secret key]--\x3efuncE[fa:fa-lock Encryption];\n        InE2[fa:fa-file-text-o Plain text]--\x3efuncE;\n        funcE--\x3e OutE[fa:fa-th Cipher text];\n      end",mdxType:"Mermaid"}),(0,n.kt)("h4",{parentName:"admonition",id:"algorithms-1"},"Algorithms"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"AES (Advanced Encryption Standard)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Block cipher"),(0,n.kt)("li",{parentName:"ul"},"Permutation",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"State"),(0,n.kt)("li",{parentName:"ul"},"Reversible"))),(0,n.kt)("li",{parentName:"ul"},"Deterministic"),(0,n.kt)("li",{parentName:"ul"},"Round function"),(0,n.kt)("li",{parentName:"ul"},"Diffusion",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Avalanche effect"))),(0,n.kt)("li",{parentName:"ul"},"Bit Security      "),(0,n.kt)("li",{parentName:"ul"},"XOR - exclusive OR "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"PKCS#7")," padding "))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AES-ECB")," (Electronic codebook)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ECB encrypted penguin"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AES-CBC")," (Cipher block chaining)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"IV - Initialization Vector",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"unpredicatable, random"),(0,n.kt)("li",{parentName:"ul"},"BEAST (Browser Exploit Against SSL/TLS) attack"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"AES-CBC-HMAC"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Encrypt-then-MAC "))),(0,n.kt)("li",{parentName:"ul"},"AEAD (Authenticated Encryption with Associated Data)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Galois/Counter_Mode"},(0,n.kt)("inlineCode",{parentName:"a"},"AES-GCM")," (Galois / Counter Mode)")," ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"AES-CTR",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Nounce"),(0,n.kt)("li",{parentName:"ul"},"Stream Cipher"))),(0,n.kt)("li",{parentName:"ul"},"GMAC",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"AXU - XORed universal hash"),(0,n.kt)("li",{parentName:"ul"},"DUF - Difference unpredictable function"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/ChaCha20-Poly1305"},(0,n.kt)("inlineCode",{parentName:"a"},"ChaCha20-Poly1305"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Adiantum_(cipher)"},(0,n.kt)("inlineCode",{parentName:"a"},"Adiantum"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Disk_encryption_theory#XTS"},(0,n.kt)("inlineCode",{parentName:"a"},"AES-XTS"))))),(0,n.kt)("h3",{id:"key-exchange"},"Key exchange"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"algorithms-2"},"Algorithms"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DH")," - Diffie-Hellman key exchange"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ECDH")," - Elliptic Curve Diffie-Hellman key exchange"))),(0,n.kt)("h3",{id:"asymmetric-cryptography"},"Asymmetric cryptography"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"aka-1"},"a.k.a"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Public key cryptography")),(0,n.kt)("h4",{parentName:"admonition",id:"scenario-alice-encrypts-bob-decrypts"},"Scenario: Alice encrypts, Bob decrypts"),(0,n.kt)(r.G,{parentName:"admonition",chart:"  flowchart LR;\n\n      keyExchange[fa:fa-cogs Key Generation]--\x3epublicKey[fa:fa-key Bob's public key]\n      keyExchange--\x3eprivateKey[fa:fa-key Bob's private key]        \n      subgraph Decrypt by Bob\n        privateKey--\x3edecrypt;\n        cipherText2[fa:fa-th Cipher text]--\x3edecrypt[fa:fa-unlock Decryption]\n        decrypt--\x3e|Success|plainText2[fa:fa-file-text-o Plain text];        \n      end\n      subgraph Encrypt by Alice\n        publicKey--\x3eencrypt\n        plainText1[fa:fa-file-text-o Plain text]--\x3eencrypt\n        encrypt[fa:fa-lock Encryption]--\x3e cipherText1[fa:fa-th Cipher text];\n      end\n",mdxType:"Mermaid"}),(0,n.kt)("h4",{parentName:"admonition",id:"use-case-1"},"Use Case"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Hybrid encryption",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"KEM - Key encapsulation mechanism"),(0,n.kt)("li",{parentName:"ul"},"DEM - Data encapsulation mechanism  ")))),(0,n.kt)("h4",{parentName:"admonition",id:"algorithms-3"},"Algorithms"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"RSA PKCS#1 v1.5"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Million message attack"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"RSA OAEP")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ECIES")," Elliptic Curve Integrated Encryption Scheme ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Ephemeral key pair")))),(0,n.kt)("h4",{parentName:"admonition",id:"attacks-2"},"Attacks"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Million message attack"))),(0,n.kt)("h3",{id:"digital-signature"},"Digital Signature"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"scenario-alice-signs-bob-verifies"},"Scenario: Alice signs, Bob verifies"),(0,n.kt)(r.G,{parentName:"admonition",chart:"  graph TB;        \n      keyExchange[fa:fa-cogs Key Generation]--\x3epublicKey[fa:fa-key Alice's public key]\n      keyExchange--\x3eprivateKey[fa:fa-key Alice's private key]\n      privateKey--\x3eencrypt\n      publicKey--\x3edecrypt\n      publicAnnouncement[fa:fa-file-text-o Message]--\x3eHMAC\n      publicAnnouncement--\x3eHMAC2\n      \n      subgraph Sign1 [Sign by Alice]\n        HMAC[fa:fa-tags HMAC]--\x3edigest[fa:fa-tag Digest A]\n        digest--\x3eencrypt[fa:fa-lock Encrypt]          \n        encrypt--\x3esignature[fa:fa-pencil-square-o Alice's signature];\n      end\n      subgraph Verify1 [Verify by Bob]\n        signature--\x3edecrypt[fa:fa-unlock Decrypt];\n        decrypt--\x3edigest1[fa:fa-tag Digest A*];\n        HMAC2[fa:fa-tags HMAC]--\x3edigest2[fa:fa-tag Digest A];\n        digest2--\x3eisEqual{is Equal?};\n        digest1--\x3eisEqual;\n        isEqual--\x3eOutV[true or false];\n      end",mdxType:"Mermaid"}),(0,n.kt)("h4",{parentName:"admonition",id:"concept"},"Concept"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Transitive Trust"),(0,n.kt)("li",{parentName:"ul"},"Zero-knowledge Proof"),(0,n.kt)("li",{parentName:"ul"},"PKI - Public key infrastructure")),(0,n.kt)("h4",{parentName:"admonition",id:"what-it-provides"},"What it provides"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Message authentication (No one can impersonate you)"),(0,n.kt)("li",{parentName:"ul"},"Non-repudiation (You cant deny the message is not sent by you)"),(0,n.kt)("li",{parentName:"ul"},"Message integrity (No one can tamper the content of message)")),(0,n.kt)("h4",{parentName:"admonition",id:"algorithms-4"},"Algorithms"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"RSA-PSS")," "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ECDSA")," Elliptic Curve Digital Signature Algorithm"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"EdDSA")," EdDSA Edwards-curve Digital Signature Algorithm")),(0,n.kt)("h4",{parentName:"admonition",id:"attacks-3"},"Attacks"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Substitution attacks",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Key substitution attacks"),(0,n.kt)("li",{parentName:"ul"},"Message key substitution attacks"))),(0,n.kt)("li",{parentName:"ul"},"Signature malleability"))),(0,n.kt)("h3",{id:"randomness--secrets"},"Randomness / Secrets"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Entropy"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"TRNG")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Hardware_random_number_generator"},"True random number generator"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"a.k.a: ",(0,n.kt)("inlineCode",{parentName:"li"},"HRNG")," Hardware random number generator"),(0,n.kt)("li",{parentName:"ul"},"Input: Entrophy from physical process"),(0,n.kt)("li",{parentName:"ul"},"Output: Random number"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"PRNG")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Pseudorandom_number_generator"},"Pseudorandom number generator"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Input: Seed (Need to be uniformly random)"),(0,n.kt)("li",{parentName:"ul"},"Output: Random number"),(0,n.kt)("li",{parentName:"ul"},"Forward / Backward secrecy"),(0,n.kt)("li",{parentName:"ul"},"Can generate a lot of output"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"VRF")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Verifiable_random_function"},"Verifiable random function"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"First, generate key pair"),(0,n.kt)("li",{parentName:"ul"},"Then, generate a seed"),(0,n.kt)("li",{parentName:"ul"},"Then, use VRF\nIn",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Private key"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Message")," Seed"))),(0,n.kt)("li",{parentName:"ul"},"Out",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Proof")," Signature",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Sign the seed to produce Signature"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Output")," Random number ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"by hashing Seed and produce MAC (Random number)"))))),(0,n.kt)("li",{parentName:"ul"},"Verification",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"use his public key to verify the seed (Verify)"),(0,n.kt)("li",{parentName:"ul"},"Hash the seed should get the random number (MAC)"))),(0,n.kt)("li",{parentName:"ul"},"Problem",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crypto.stackexchange.com/questions/50681/what-is-the-difference-between-signatures-and-vrf"},"Signature scheme do not guarantee uniqueness. Signature is malleable.")))),(0,n.kt)("li",{parentName:"ul"},"Solution",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Fully distributed VRF. Decentralised Random Beacons  "))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"KDF")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Key_derivation_function"},"Key derivation function"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Input: Random input(Dont need to be uniformly random)"),(0,n.kt)("li",{parentName:"ul"},"Output: Uniformly Random number"),(0,n.kt)("li",{parentName:"ul"},"Cannot generate too much output"),(0,n.kt)("li",{parentName:"ul"},"Derive multiple secrets from one secret."),(0,n.kt)("li",{parentName:"ul"},"Deterministic"),(0,n.kt)("li",{parentName:"ul"},"Salt",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Public"),(0,n.kt)("li",{parentName:"ul"},"Domain Separation   "))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"HKDF")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/HKDF"},"HMAC-based key derivation function"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Parts",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"HKDF-Extract"),(0,n.kt)("li",{parentName:"ul"},"HKDF-Expand"))),(0,n.kt)("li",{parentName:"ul"},"can use HMAC, with key as input and salt as key"),(0,n.kt)("li",{parentName:"ul"},"can use XOF (Extended output function)"))))),(0,n.kt)("li",{parentName:"ul"},"Key management",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Key rotation"),(0,n.kt)("li",{parentName:"ul"},"Key revocation"),(0,n.kt)("li",{parentName:"ul"},"Key stores / Key chains / Cloud key management services"))),(0,n.kt)("li",{parentName:"ul"},"Threshold cryptography",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Objective",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Decentralize trust"))),(0,n.kt)("li",{parentName:"ul"},"Algorithm",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SSS")," Shamir secret sharing",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Reconstruction of private key at dealer will lead to single point of failure"))),(0,n.kt)("li",{parentName:"ul"},"Aggregated signatures"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DKG")," Distributed key generation"))))))),(0,n.kt)("h3",{id:"tls-transport-layer-security"},(0,n.kt)("inlineCode",{parentName:"h3"},"TLS")," Transport layer security"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"aka-2"},"a.k.a"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SSL")," Secure socket layer")),(0,n.kt)("h4",{parentName:"admonition",id:"life-cycle"},"Life Cycle"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Handshake",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Key exchange",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"negotiate what kind of algorithms will be used",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"ClientHello        ",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"key exchange"),(0,n.kt)("li",{parentName:"ul"},"digital signature"),(0,n.kt)("li",{parentName:"ul"},"hash function (unrelated to digital signature)"),(0,n.kt)("li",{parentName:"ul"},"authenticated encryption"))),(0,n.kt)("li",{parentName:"ul"},"ServerHello"),(0,n.kt)("li",{parentName:"ul"},"HelloRetryRequest"))))),(0,n.kt)("li",{parentName:"ul"},"Authentication",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Finished Message (contains authentication tag that hash all message by HMAC)"))))),(0,n.kt)("li",{parentName:"ul"},"Post handshake",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Session resumption",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"PSK - pre-shared key")))))),(0,n.kt)("h4",{parentName:"admonition",id:"mutually-authenticated-tls"},"Mutually-authenticated TLS"),(0,n.kt)("h4",{parentName:"admonition",id:"pki-public-key-infrastructure"},"PKI Public key infrastructure"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"CA - Certificate Authority",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Root CA"),(0,n.kt)("li",{parentName:"ul"},"Intermediate CA"))),(0,n.kt)("li",{parentName:"ul"},"Leaf Certificate"),(0,n.kt)("li",{parentName:"ul"},"X.509 Certificate"),(0,n.kt)("li",{parentName:"ul"},"Misbehaving CA",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Certificate / Public Key Pinning "),(0,n.kt)("li",{parentName:"ul"},"Certificate Revocation List"),(0,n.kt)("li",{parentName:"ul"},"OCSP - Online Certificate Status Protocol"),(0,n.kt)("li",{parentName:"ul"},"OCSP stapling"))))),(0,n.kt)("h3",{id:"email"},"Email"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"PGP")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Pretty_Good_Privacy"},"Pretty Good Privacy")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"S/MIME")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/S/MIME"},"Secure/Multipurpose Internet Mail Extensions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SMTP")," ",(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"},"Simple Mail Transfer Protocol")))),(0,n.kt)("h3",{id:"signal-protocol"},"Signal Protocol"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("h4",{parentName:"admonition",id:"trust"},"Trust"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"TOFU - trust on first use")),(0,n.kt)("h4",{parentName:"admonition",id:"mechanism"},"Mechanism"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"X3DH")," Extended Triple Diffie-Hellman (Handshake, forward secrecy every conversation)"),(0,n.kt)("li",{parentName:"ul"},"Symmetric ratchet (Post-handshake, forward secrecy every single message)"),(0,n.kt)("li",{parentName:"ul"},"DH ratchet (Post-compromise security)")),(0,n.kt)("h4",{parentName:"admonition",id:"future"},"Future"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Group messaging",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Client-side fanout"),(0,n.kt)("li",{parentName:"ul"},"Server-side fanout"))),(0,n.kt)("li",{parentName:"ul"},"Multiple device"),(0,n.kt)("li",{parentName:"ul"},"Better security assurance than TOFU",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Most user do not verify fingerprints in TOFU"))))),(0,n.kt)("h2",{id:"vocabuary"},"Vocabuary"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Forge")," a signature                                "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Impersonate")," someone                              "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tamper")," the message"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Thrawt")," attacks"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Hijack")," connection"),(0,n.kt)("li",{parentName:"ul"},"The key is ",(0,n.kt)("strong",{parentName:"li"},"compromised"),"                            "),(0,n.kt)("li",{parentName:"ul"},"Security via ",(0,n.kt)("strong",{parentName:"li"},"obscurity"),"                           "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Encrypt")," a ",(0,n.kt)("strong",{parentName:"li"},"plain text"),"                         "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Decrypt")," a ",(0,n.kt)("strong",{parentName:"li"},"cipher text"),"                        "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Sign")," the message                                 "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Verify")," the signature                             ")),(0,n.kt)("h2",{id:"please-note"},"Please note"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Never hash with SHA2, especially on MAC or secret. Use HMAC always."),(0,n.kt)("li",{parentName:"ul"},"Asymmetric Encryption encrypts data of limited size (e.g. at most 245 byte for RSA PKCS#1 v1.5 with 2048 bit key). That is why hybrid encryption is needed.")))}s.isMDXComponent=!0}}]);