"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[656],{6326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>g});var o=t(7462),i=(t(7294),t(3905));t(1839);const r={sidebar_position:4},a="Lesson 3:  Swagger",p={unversionedId:"spring-boot/swagger",id:"spring-boot/swagger",title:"Lesson 3:  Swagger",description:"Why do we need Swagger? To provide the API documentation and a corresponding UI.",source:"@site/docs/spring-boot/swagger.md",sourceDirName:"spring-boot",slug:"/spring-boot/swagger",permalink:"/Notesaurus/docs/spring-boot/swagger",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/swagger.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Lesson 2: Rest Controller",permalink:"/Notesaurus/docs/spring-boot/rest-controller"},next:{title:"Lesson 4:  JPA",permalink:"/Notesaurus/docs/spring-boot/jpa"}},s={},g=[{value:"Reference",id:"reference",level:2},{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Add starter",id:"1-add-starter",level:3},{value:"2. Document the API with annotation",id:"2-document-the-api-with-annotation",level:3},{value:"3. Restart the server",id:"3-restart-the-server",level:3},{value:"4.  Go to Swagger URL",id:"4--go-to-swagger-url",level:3},{value:"5. Other Configuration",id:"5-other-configuration",level:3}],l={toc:g};function m(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,o.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lesson-3--swagger"},"Lesson 3:  Swagger"),(0,i.kt)("p",null,"Why do we need Swagger? To provide the API documentation and a corresponding UI."),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://springdoc.org/"},"Spring Doc Official Site")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://springdoc.org/migrating-from-springfox.html"},"Migrating from Spring Fox")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.csdn.net/wangzhihao1994/article/details/108408595"},"Spring Boot \u6574\u5408 springdoc-openapi"))),(0,i.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,i.kt)("h3",{id:"1-add-starter"},"1. Add starter"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'},"<dependency>\n    <groupId>org.springdoc</groupId>\n    <artifactId>springdoc-openapi-ui</artifactId>\n    <version>1.6.7</version>\n</dependency>\n")),(0,i.kt)("h3",{id:"2-document-the-api-with-annotation"},"2. Document the API with annotation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="com.example.demo.web.controller.DemoController" showLineNumbers',title:'"com.example.demo.web.controller.DemoController"',showLineNumbers:!0},'package com.example.demo.web.controller;\n\nimport com.example.demo.web.model.DemoRequest;\nimport com.example.demo.web.model.DemoResponse;\nimport io.swagger.v3.oas.annotations.Operation;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping("/demo/")\n\npublic class DemoController {\n\n    private static Logger logger = LoggerFactory.getLogger(DemoController.class);\n\n    @RequestMapping(value = "/copycat", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n    {/* highlight-start */}\n    @Operation(summary = "A copycat function that returns the input value.", description = "The value in outputParam1 copies the value in inputParam1.")\n    {/* highlight-end */}\n    public DemoResponse copycat(@RequestBody DemoRequest demoRequest)\n    {\n        logger.info("[Demo Request] {}" , demoRequest.toString());\n\n        DemoResponse demoResponse = new DemoResponse();\n        demoResponse.setOutputParam1(demoRequest.getInputParam1());\n\n        logger.info("[Demo Response] {}" , demoResponse.toString());\n        return demoResponse;\n    }\n}\n\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="com.example.demo.web.model.DemoRequest" showLineNumbers',title:'"com.example.demo.web.model.DemoRequest"',showLineNumbers:!0},'package com.example.demo.web.model;\n\nimport io.swagger.v3.oas.annotations.media.Schema;\n\npublic class DemoRequest {\n    {/* highlight-start */}\n    @Schema(example="Hello World", required = false, title="Input Parameter 1")\n    {/* highlight-end */}\n    private String inputParam1;\n\n    public String getInputParam1() {\n        return inputParam1;\n    }\n\n    public void setInputParam1(String inputParam1) {\n        this.inputParam1 = inputParam1;\n    }\n\n    @Override\n    public String toString() {\n        return "DemoRequest{" +\n                "inputParam1=\'" + inputParam1 + \'\\\'\' +\n                \'}\';\n    }\n}\n')),(0,i.kt)("h3",{id:"3-restart-the-server"},"3. Restart the server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"mvn clean spring-boot:run\n")),(0,i.kt)("h3",{id:"4--go-to-swagger-url"},"4.  Go to Swagger URL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"http://localhost:18080/swagger-ui/index.html\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"You can see the UI and documentation "),(0,i.kt)("p",{parentName:"li"}," ",(0,i.kt)("img",{alt:"springdoc 1",src:t(1398).Z,width:"1164",height:"761"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Expand the copycat function you can see more information"),(0,i.kt)("p",{parentName:"li"},"  ",(0,i.kt)("img",{alt:"springdoc 2",src:t(5330).Z,width:"768",height:"948"}))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Click try out, and click execute. You can get the output."),(0,i.kt)("p",{parentName:"li"},"  ",(0,i.kt)("img",{alt:"springdoc 3",src:t(2943).Z,width:"756",height:"1271"})))),(0,i.kt)("h3",{id:"5-other-configuration"},"5. Other Configuration"),(0,i.kt)("p",null,'The library supports a lot of settings. Below shows configuration on how to change the name, version and description, as well as showing "Try it out" section immediately. '),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=application.yml",title:"application.yml"},"swagger:\n  application-name: ${spring.application.name}\n  application-version: 1.0\n  application-description: description here\nspringdoc:\n  swagger-ui:\n    tryitOutEnabled: true\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=SpringdocOpenapiConfiguration.java showLineNumbers",title:"SpringdocOpenapiConfiguration.java",showLineNumbers:!0},'import io.swagger.v3.oas.models.info.Info;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class SpringdocOpenapiConfiguration implements WebMvcConfigurer {\n\n    private final SwaggerProperties swaggerProperties;\n\n    public SpringdocOpenapiConfiguration(SwaggerProperties swaggerProperties) {\n        this.swaggerProperties = swaggerProperties;\n    }\n\n    @Bean\n    public OpenAPI springDocOpenAPI() {\n        return new OpenAPI().info(\n                new Info()\n                        .title(swaggerProperties.getApplicationName() + " API Documentation")\n                        .description(swaggerProperties.getApplicationDescription())\n                        .version("Version: " + swaggerProperties.getApplicationVersion())\n        );\n    }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"title=SwaggerProperties.java showLineNumbers",title:"SwaggerProperties.java",showLineNumbers:!0},'import org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.stereotype.Component;\n\n@Component\n@ConfigurationProperties("swagger")\npublic class SwaggerProperties {\n\n    private String applicationName;\n    private String applicationVersion;\n    private String applicationDescription;\n\n    public String getApplicationName() {\n        return applicationName;\n    }\n\n    public void setApplicationName(String applicationName) {\n        this.applicationName = applicationName;\n    }\n\n    public String getApplicationVersion() {\n        return applicationVersion;\n    }\n\n    public void setApplicationVersion(String applicationVersion) {\n        this.applicationVersion = applicationVersion;\n    }\n\n    public String getApplicationDescription() {\n        return applicationDescription;\n    }\n\n    public void setApplicationDescription(String applicationDescription) {\n        this.applicationDescription = applicationDescription;\n    }\n}\n')))}m.isMDXComponent=!0},1398:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/springdoc-swagger-1-ea4d0fe2fd764832f35634065ee124ef.PNG"},5330:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/springdoc-swagger-2-d5db0b255c57b43cac3d410c3472c61e.PNG"},2943:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/springdoc-swagger-3-d2967d881907a4487378d8ab4dcbcef8.PNG"}}]);