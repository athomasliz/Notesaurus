"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[2276],{4153:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>n,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=t(7462),i=(t(7294),t(3905)),l=t(1839);const o={sidebar_position:1},n="Day 0: JVM",s={unversionedId:"java/jvm",id:"java/jvm",title:"Day 0: JVM",description:"Notes",source:"@site/docs/java/jvm.md",sourceDirName:"java",slug:"/java/jvm",permalink:"/Notesaurus/docs/java/jvm",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/java/jvm.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"iOS Distribution",permalink:"/Notesaurus/docs/react-native/Miscellaneous/ios-distribution"},next:{title:"Day 0: Spring Boot 101",permalink:"/Notesaurus/docs/spring-boot/101"}},m={},c=[{value:"Notes",id:"notes",level:3},{value:"Reference",id:"reference",level:3}],u={toc:c};function p(e){let{components:a,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,o,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"day-0-jvm"},"Day 0: JVM"),(0,i.kt)("h3",{id:"notes"},"Notes"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Flow: From source code to JVM",(0,i.kt)(l.G,{parentName:"li",config:'{"theme":{"light":"neutral","dark":"forest"},"themeVariables":{"lineColor":"#9CCC65"}}',chart:"   flowchart LR;\n   A1[Java source code <br/>.java files]--\x3eB1[Java Compiler]--\x3eC[bytecode <br/>.class files]--\x3eD1[JVM for Windows]--\x3eE1[fa:fa-windows Windows]\n   A2[Kotlin source code <br/>.kt files]--\x3eB2[Kotlin Compiler]--\x3eC\n   A3[Scala source code <br/>.sc files]--\x3eB3[Scala Compiler]--\x3eC\n   C--\x3eD2[JVM for Linux]--\x3eE2[fa:fa-linux Linix]\n   C--\x3eD3[JVM for macOS]--\x3eE3[fa:fa-apple macOS]       ",mdxType:"Mermaid"})),(0,i.kt)("li",{parentName:"ol"},"JVM Overview\n",(0,i.kt)("a",{target:"_blank",href:t(5732).Z},(0,i.kt)("img",{alt:"JVM Overview",src:t(5807).Z,width:"1123",height:"794"}))),(0,i.kt)("li",{parentName:"ol"},"Runtime data areas",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"PC registers (Call stack)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Each thread has its own PC registers"))),(0,i.kt)("li",{parentName:"ol"},"Stack area",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Linear data structure"),(0,i.kt)("li",{parentName:"ul"},"Each thread has its own stack"),(0,i.kt)("li",{parentName:"ul"},"Each stack has ",(0,i.kt)("strong",{parentName:"li"},"frames")),(0,i.kt)("li",{parentName:"ul"},"Each frame is created for each method call (Consider recursion)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Local variable array",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"First element is reference to the object, i.e. this, for instance method"))),(0,i.kt)("li",{parentName:"ul"},"Frame data"),(0,i.kt)("li",{parentName:"ul"},"Operand stack"))),(0,i.kt)("li",{parentName:"ul"},"StackOverFlowError is thrown if stack memory is too small for the frame"),(0,i.kt)("li",{parentName:"ul"},"OutOfMemoryError is thrown if not enough space for a new stack for a new thread"))),(0,i.kt)("li",{parentName:"ol"},"Heap area",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Hierarchical data structure"))),(0,i.kt)("li",{parentName:"ol"},"Method area (Metaspace)",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Klass"),(0,i.kt)("li",{parentName:"ul"},"Bytecode"),(0,i.kt)("li",{parentName:"ul"},"Constant Pool"),(0,i.kt)("li",{parentName:"ul"},"Annotation etc   "))),(0,i.kt)("li",{parentName:"ol"},"Native method stack area"))),(0,i.kt)("li",{parentName:"ol"},"Garbage Collection",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Deallocation of objects"),(0,i.kt)("li",{parentName:"ul"},"Reallocate live objects to get rid of ",(0,i.kt)("strong",{parentName:"li"},"Memory Fragmentation")," via compacting / copy")))),(0,i.kt)("h3",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://learning.oreilly.com/library/view/java-memory-management/9781801812856/"},(0,i.kt)("img",{parentName:"a",src:"https://learning.oreilly.com/covers/urn:orm:book:9781801812856/160h/",alt:"Java Memory Management"})))))}p.isMDXComponent=!0},5732:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/files/jvm-memory-b06c3a7420505bba93ace34fd32641cc.svg"},5807:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/images/jvm-memory-b06c3a7420505bba93ace34fd32641cc.svg"}}]);