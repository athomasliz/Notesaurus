"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[3820],{3749:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=t(5893),s=t(1151);const i={sidebar_position:5},a="JPA",l={id:"spring-boot/jpa",title:"JPA",description:"Step by Step Guide",source:"@site/docs/spring-boot/jpa.md",sourceDirName:"spring-boot",slug:"/spring-boot/jpa",permalink:"/Notesaurus/docs/spring-boot/jpa",draft:!1,unlisted:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/jpa.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Swagger",permalink:"/Notesaurus/docs/spring-boot/swagger"},next:{title:"Profile",permalink:"/Notesaurus/docs/spring-boot/profile"}},o={},d=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Prepare db and table",id:"1-prepare-db-and-table",level:3},{value:"2. Add starter",id:"2-add-starter",level:3},{value:"3. Add configuration",id:"3-add-configuration",level:3},{value:"4. Create entity class",id:"4-create-entity-class",level:3},{value:"5. Create repository class",id:"5-create-repository-class",level:3},{value:"6. Create service class",id:"6-create-service-class",level:3},{value:"7. Call mysql service in rest controller",id:"7-call-mysql-service-in-rest-controller",level:3},{value:"8. Test in swagger",id:"8-test-in-swagger",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"jpa",children:"JPA"}),"\n",(0,r.jsx)(n.h2,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,r.jsx)(n.h3,{id:"1-prepare-db-and-table",children:"1. Prepare db and table"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Install mysql database."}),"\n",(0,r.jsx)(n.li,{children:"Create schema demo"}),"\n",(0,r.jsxs)(n.li,{children:["Create table mysql","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE mysql (\n  id int NOT NULL,\n  input varchar(255) NOT NULL,\n  output varchar(255) NOT NULL,\n  PRIMARY KEY (id)\n);\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Add a record into table","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"insert into mysql values( 1,  'A', 'B');\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-add-starter",children:"2. Add starter"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:'title="pom.xml"',children:"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>8.0.32</version>\n</dependency>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-add-configuration",children:"3. Add configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="application.yml"',children:"spring:\n  application:\n    name: Spring Boot Demo\n{/* highlight-start */}    \n  datasource:\n    url: jdbc:mysql://mysqldb:3307/demo?useUnicode=true&characterEncoding=utf-8&useLegacyDatetimeCode=false\n    username: xxxxxx\n    password: xxxxxx\n    driverClassName: com.mysql.jdbc.Driver\n  jpa:\n    database : MYSQL\n    show-sql : true\n    hibernate:\n      ddl-auto : update\n      naming-strategy : org.hibernate.cfg.ImprovedNamingStrategy\n    properties:\n      hibernate:\n        dialect : org.hibernate.dialect.MySQL8Dialect\n        jdbc:\n          time_zone: GMT+8  \n{/* highlight-end */}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-create-entity-class",children:"4. Create entity class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="org.irushu.demo.data.persistence.model.Mysql" showLineNumbers',children:'{/* highlight-start */}   \n@Entity\n@Table(name="mysql")\n{/* highlight-end */} \npublic class Mysql {\n    {/* highlight-start */}  \n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    {/* highlight-end */} \n    private Integer id;\n    {/* highlight-start */}  \n    @Column(name="input", columnDefinition = "varchar(255)")\n    {/* highlight-end */} \n    private String input;\n    {/* highlight-start */}  \n    @Column(name="output", columnDefinition = "varchar(255)")\n    {/* highlight-end */} \n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-create-repository-class",children:"5. Create repository class"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="org.irushu.demo.data.persistence.repository.MysqlRepository" showLineNumbers',children:'package org.irushu.demo.data.persistence.repository;\n\nimport org.irushu.demo.data.persistence.model.Mysql;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.query.Param;\n\nimport java.util.List;\n{/* highlight-start */}  \npublic interface MysqlRepository extends JpaRepository<Mysql, String> {\n\n    @Query("SELECT m FROM Mysql m WHERE m.input = :input")\n    List<Mysql> findByInput(@Param("input") String input);\n{/* highlight-end */} \n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"6-create-service-class",children:"6. Create service class"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Service class implements the business logic, and encapsulates the data access logic."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="org.irushu.demo.service.MysqlService" showLineNumbers',children:"@Component\npublic class MysqlService {\n\n    @Autowired\n    private MysqlRepository mysqlRepository;\n\n    public String findByInput(String input){\n        List<Mysql> lMysql = mysqlRepository.findByInput(input);\n        ...\n    }\n}\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"7-call-mysql-service-in-rest-controller",children:"7. Call mysql service in rest controller"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Autowire mysql service in rest controller."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="org.irushu.demo.web.controller.DemoController"',children:"@Autowired\nprivate MysqlService mysqlService;\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add the new method ",(0,r.jsx)(n.strong,{children:"findInMysql"})," in rest controller."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",metastring:'title="org.irushu.demo.web.controller.DemoController" showLineNumbers',children:'@RequestMapping(value = "/findInMysql", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n@Operation(summary = "Find in Mysql", description = "")\npublic DemoResponse findInMysql(@RequestBody DemoRequest demoRequest)\n{\n    DemoResponse demoResponse = new DemoResponse();\n    demoResponse.setOutput(mysqlService.findByInput(demoRequest.getInput()));\n    return demoResponse;\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"8-test-in-swagger",children:"8. Test in swagger"})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>a});var r=t(7294);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);