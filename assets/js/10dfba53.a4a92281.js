"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[9239],{7727:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>u});var s=o(7462),n=(o(7294),o(3905));o(1839);const r={sidebar_position:9},i="Day 8:  Unit Test with MockMvc",c={unversionedId:"spring-boot/mockMvc",id:"spring-boot/mockMvc",title:"Day 8:  Unit Test with MockMvc",description:"Step by Step Guide",source:"@site/docs/spring-boot/mockMvc.md",sourceDirName:"spring-boot",slug:"/spring-boot/mockMvc",permalink:"/Notesaurus/docs/spring-boot/mockMvc",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/mockMvc.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Day 7:  Unit Test with Mockito",permalink:"/Notesaurus/docs/spring-boot/mockito"},next:{title:"Day 0:  Overview",permalink:"/Notesaurus/docs/spring-cloud/overview"}},a={},u=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"Reference",id:"reference",level:2}],l={toc:u};function p(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,s.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"day-8--unit-test-with-mockmvc"},"Day 8:  Unit Test with MockMvc"),(0,n.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="oorg.irushu.demo.ControllerTests" showLineNumbers',title:'"oorg.irushu.demo.ControllerTests"',showLineNumbers:!0},'@RunWith(SpringRunner.class)\n@WebMvcTest(controllers = DemoController.class,\n        useDefaultFilters = false,\n        excludeFilters = {@ComponentScan.Filter(type = FilterType.ASSIGNABLE_TYPE, value = WebSecurityConfigurer.class)},\n        excludeAutoConfiguration = {SecurityAutoConfiguration.class,\n                SecurityFilterAutoConfiguration.class}\n)\n@ComponentScan(basePackages = "org.irushu.demo.web.controller")\npublic class ControllerTests {\n\n    @MockBean\n    private MysqlService mysqlService;\n    @MockBean\n    private KafkaProducerService kafkaProducerService;\n    @MockBean\n    private RedisCounterService redisCounterService;\n    @Autowired\n    private MockMvc mockMvc;\n\n    @Test\n    public void testMysql() throws Exception {\n        Mockito.when(mysqlService.findByInput(anyString())).thenReturn("B" );\n        RequestBuilder request = MockMvcRequestBuilders\n                .post("/demo/01-mysql")\n                .content("{ \\"input\\" : \\"A\\" }")\n                .contentType(MediaType.APPLICATION_JSON)\n                .accept(MediaType.APPLICATION_JSON);\n        MvcResult result = mockMvc.perform(request).andReturn();\n        assertEquals("{\\"output\\":\\"B\\"}", result.getResponse().getContentAsString());\n    }\n}\n')),(0,n.kt)("h2",{id:"reference"},"Reference"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/47593537/disable-spring-security-config-class-for-webmvctest-in-spring-boot"},"https://stackoverflow.com/questions/47593537/disable-spring-security-config-class-for-webmvctest-in-spring-boot")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/57663357/spring-boot-unit-test-on-controller-404-answer"},"https://stackoverflow.com/questions/57663357/spring-boot-unit-test-on-controller-404-answer")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.jianshu.com/p/4a8326d89991"},"https://www.jianshu.com/p/4a8326d89991"))))}p.isMDXComponent=!0}}]);