"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[7370],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},p),{},{components:n})):r.createElement(g,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6830:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:5},i="React i18n",s={unversionedId:"react-native/framework-library/react-i18n",id:"react-native/framework-library/react-i18n",title:"React i18n",description:"Internationalize your web apps on the client & server.",source:"@site/docs/react-native/framework-library/react-i18n.md",sourceDirName:"react-native/framework-library",slug:"/react-native/framework-library/react-i18n",permalink:"/Notesaurus/docs/react-native/framework-library/react-i18n",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/react-native/framework-library/react-i18n.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"React Navigation",permalink:"/Notesaurus/docs/react-native/framework-library/react-navigation"},next:{title:"Axios",permalink:"/Notesaurus/docs/react-native/framework-library/axios"}},l={},c=[{value:"Reference",id:"reference",level:2},{value:"Issues",id:"issues",level:2},{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Import library",id:"1-import-library",level:3},{value:"2. Prepare Message Resource Files",id:"2-prepare-message-resource-files",level:3},{value:"3. Wrap App Component with IntlProvider component. Specify locale and message resource",id:"3-wrap-app-component-with-intlprovider-component-specify-locale-and-message-resource",level:3},{value:"4a. Usage 1: use &lt;FormattedMessage&gt;",id:"4a-usage-1-use-formattedmessage",level:3},{value:"4b. Usage 2: React Hook useIntl",id:"4b-usage-2-react-hook-useintl",level:3}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-i18n"},"React i18n"),(0,a.kt)("p",null,"Internationalize your web apps on the client & server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"npm install react-intl\nnpm install intl\n")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://formatjs.io/"},"Official Site"))),(0,a.kt)("h2",{id:"issues"},"Issues"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Placeholder cannot use FormattedMessage"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Using React Hook intl.formatMessage(messages.title)"),(0,a.kt)("p",{parentName:"li"},"  ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/react-navigation/react-navigation/issues/712"},"react-navigation/react-navigation#712"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://iq.js.org/questions/react/how-to-use-formattedmessage-as-placeholder-using-react-intl"},"How to use ","<","FormattedMessage",">"," as placeholder using React Intl?")))))),(0,a.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,a.kt)("h3",{id:"1-import-library"},"1. Import library"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.js"',title:'"App.js"'},"import 'intl';\nimport 'intl/locale-data/jsonp/en'; // or any other locale you need\nimport 'intl/locale-data/jsonp/zh-Hans-CN'; // or any other locale you need\nimport 'intl/locale-data/jsonp/zh-Hant-HK'; // or any other locale you need\nimport { en, cn, hk } from './src/i18n';\nimport { IntlProvider } from 'react-intl';\n")),(0,a.kt)("h3",{id:"2-prepare-message-resource-files"},"2. Prepare Message Resource Files"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/i18n/cn.js"',title:'"src/i18n/cn.js"'},"const cn = { \n    'tab.account': '\u8d26\u6237',\n    'tab.login': '\u767b\u5165',\n    'tab.portfolio': '\u6295\u8d44\u7ec4\u5408'\n};\nexport default cn;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/i18n/en.js"',title:'"src/i18n/en.js"'},"const en = { \n    'tab.account': 'Account',\n    'tab.login': 'Login',\n    'tab.portfolio': 'Portfolio'\n};\nexport default en;\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/i18n/hk.js"',title:'"src/i18n/hk.js"'},"const hk = { \n    'tab.account': '\u8cec\u6236',\n    'tab.login': '\u767b\u5165',\n    'tab.portfolio': '\u6295\u8cc7\u7d44\u5408'\n};\nexport default hk;\n")),(0,a.kt)("h3",{id:"3-wrap-app-component-with-intlprovider-component-specify-locale-and-message-resource"},"3. Wrap App Component with IntlProvider component. Specify locale and message resource"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="App.js"',title:'"App.js"'},"const App = () => {\n\n  const i18nFormattedMessages={\n    'en': en,\n    'zh-Hans-CN': cn,\n    'zh-Hant-HK': hk\n  };\n  const [ myLocale, useMyLocale ]= useState('zh-Hant-HK');\n    \n  return (\n    ...\n      <IntlProvider locale={myLocale} defaultLocale='en' messages={i18nFormattedMessages[myLocale]}>\n       ...\n      </IntlProvider>\n    ...\n  );\n};\n")),(0,a.kt)("h3",{id:"4a-usage-1-use-formattedmessage"},"4a. Usage 1: use ","<","FormattedMessage",">"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'<FormattedMessage\n  id="app.greeting"\n  description="Greeting to welcome the user to the app"\n  defaultMessage="Hello, {name}!"\n  values={{\n    name: \'Eric\',\n  }}\n/>\n')),(0,a.kt)("h3",{id:"4b-usage-2-react-hook-useintl"},"4b. Usage 2: React Hook useIntl"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/screens/index.js"',title:'"src/screens/index.js"'},"import { useIntl } from 'react-intl'\nconst EmoTabScreen = () => {\n  const intl = useIntl();\n  return (\n      ...\n          <Tab.Screen \n              name=\"Portfolio\" \n              component={PortfolioScreen}\n              options={{\n                  tabBarLabel: intl.formatMessage({ id: 'tab.portfolio'}),\n                  tabBarIcon: ({ color, size }) => (\n                    <AntDesign name=\"piechart\" color={color} size={size} />\n                  ),\n                }}\n          />\n       ...\n  );\n};                          \n")))}u.isMDXComponent=!0}}]);