"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[6424],{8026:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));a(1839);const i={sidebar_position:8},o="Expo Local Authentication",c={unversionedId:"react-native/framework-library/expo-local-authentication",id:"react-native/framework-library/expo-local-authentication",title:"Expo Local Authentication",description:"Provides an API for FaceID and TouchID (iOS) or the Fingerprint API (Android) to authenticate the user with a face or fingerprint scan.",source:"@site/docs/react-native/framework-library/expo-local-authentication.md",sourceDirName:"react-native/framework-library",slug:"/react-native/framework-library/expo-local-authentication",permalink:"/Notesaurus/docs/react-native/framework-library/expo-local-authentication",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/react-native/framework-library/expo-local-authentication.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"React i18n",permalink:"/Notesaurus/docs/react/react-i18n"},next:{title:"Other libraries",permalink:"/Notesaurus/docs/react-native/framework-library/other-libraries"}},l={},s=[{value:"Reference",id:"reference",level:2},{value:"Step by Step Guide",id:"step-by-step-guide",level:2}],u={toc:s};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"expo-local-authentication"},"Expo Local Authentication"),(0,r.kt)("p",null,"Provides an API for FaceID and TouchID (iOS) or the Fingerprint API (Android) to authenticate the user with a face or fingerprint scan."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"npm install react-native-unimodules\nnpx pod-install\nnpm install expo-local-authentication\n")),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/expo/expo/tree/master/packages/expo-local-authentication"},"Official Site"))),(0,r.kt)("h2",{id:"step-by-step-guide"},"Step by Step Guide"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as LocalAuthentication  from 'expo-local-authentication'\n...\nconst biometricsAuth = async () => {\n  try{\n    const compatible = await LocalAuthentication.hasHardwareAsync()\n    if (!compatible) {\n      Alert.alert( 'This device is not compatible for biometric authentication');\n    }\n    else{\n      const enrolled = await LocalAuthentication.isEnrolledAsync()\n      if (!enrolled) {\n        Alert.alert( `This device doesnt have biometric authentication enabled`)\n      }\n      else{\n        const result = await LocalAuthentication.authenticateAsync();\n        if (!result.success) {\n          Alert.alert( `${result.error} - Authentication unsuccessful`);\n        }\n        else{\n          Alert.alert( `Authentication succeed`);\n        } \n      \n      }  \n    }\n  }\n  catch(error){\n    console.error('Error', error);\n   \n  }  \n}\n...\n<TouchableOpacity activeOpacity={0.6} underlayColor=\"#FFF59D\" onPress={() => biometricsAuth()} style={{ borderRadius: 10 , alignSelf: 'flex-start' }}>\n...\n")))}p.isMDXComponent=!0}}]);