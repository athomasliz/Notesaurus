"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[5030],{5522:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>c});var r=n(5893),o=n(1151);const t={sidebar_position:6},l="Profile",s={id:"spring-boot/profile",title:"Profile",description:"Step by Step Guide",source:"@site/docs/spring-boot/profile.md",sourceDirName:"spring-boot",slug:"/spring-boot/profile",permalink:"/Notesaurus/docs/spring-boot/profile",draft:!1,unlisted:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/spring-boot/profile.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"JPA",permalink:"/Notesaurus/docs/spring-boot/jpa"},next:{title:"Secure with TLS",permalink:"/Notesaurus/docs/spring-boot/tls"}},a={},c=[{value:"Step by Step Guide",id:"step-by-step-guide",level:2},{value:"1. Define profiles in <code>pom.xml</code>",id:"1-define-profiles-in-pomxml",level:3},{value:"2. Configure <code>application.yml</code>",id:"2-configure-applicationyml",level:3},{value:"3. Add <code>application-uat.yml</code> and <code>application-production.yml</code>",id:"3-add-application-uatyml-and-application-productionyml",level:3},{value:"4. Specify which profile to use when building jar or running with maven command",id:"4-specify-which-profile-to-use-when-building-jar-or-running-with-maven-command",level:3},{value:"Mischellaneous",id:"mischellaneous",level:2},{value:"1. Configure main class and classifier",id:"1-configure-main-class-and-classifier",level:3},{value:"2. Configure the profile of a java component",id:"2-configure-the-profile-of-a-java-component",level:3},{value:"3: Configure the active profile",id:"3-configure-the-active-profile",level:3}];function p(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"profile",children:"Profile"}),"\n",(0,r.jsx)(i.h2,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,r.jsxs)(i.h3,{id:"1-define-profiles-in-pomxml",children:["1. Define profiles in ",(0,r.jsx)(i.code,{children:"pom.xml"})]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",metastring:'title="pom.xml" showLineNumbers',children:"<profiles>\n  <profile>\n    <id>uat</id>\n    <properties>\n    {/* highlight-start */}   \n      <spring.profiles.active>uat</spring.profiles.active>\n      <resource.dir>uat</resource.dir>\n    {/* highlight-end */}     \n    </properties>\n  </profile>\n  <profile>\n    <id>production</id>\n    <properties>\n    {/* highlight-start */}\n      <spring.profiles.active>production</spring.profiles.active>\n      <resource.dir>production</resource.dir>\n    {/* highlight-end */}\n    </properties>\n  </profile>\n</profiles>\n<build>\n  <resources>\n    <resource>\n      {/* highlight-start */}\n      <directory>src/main/resources/${resources.dir}</directory>\n      {/* highlight-end */}\n      <filtering>true</filtering>\n      <includes>\n        <include>**.*</include>\n      </includes>\n\t\t</resource>\n    <resource>\n      <directory>src/main/resources</directory>\n      <filtering>true</filtering>\n      <includes>\n        {/* highlight-start */}\n        <include>application.yml</include>        \n        {/* highlight-end */}      \n      </includes>\n    </resource>\n  </resources>\n  ...\n</build>\n"})}),"\n",(0,r.jsxs)(i.h3,{id:"2-configure-applicationyml",children:["2. Configure ",(0,r.jsx)(i.code,{children:"application.yml"})]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yml",metastring:'title="application.yml"',children:'spring:\n  profiles:\n  {/* highlight-start */}\n    active: "@spring.profiles.active@"\n  {/* highlight-end */}    \n'})}),"\n",(0,r.jsxs)(i.h3,{id:"3-add-application-uatyml-and-application-productionyml",children:["3. Add ",(0,r.jsx)(i.code,{children:"application-uat.yml"})," and ",(0,r.jsx)(i.code,{children:"application-production.yml"})]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yml",metastring:'title="application-uat.yml" showLineNumber',children:"server:\n{/* highlight-start */}   \n  port: 18080\n{/* highlight-end */}     \n  servlet:\n    context-path: /\n...    \n"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-yml",metastring:'title="application-production.yml" showLineNumbers',children:"server:\n{/* highlight-start */}   \n  port: 8080\n{/* highlight-end */}     \n  servlet:\n    context-path: /\n...\n"})}),"\n",(0,r.jsx)(i.h3,{id:"4-specify-which-profile-to-use-when-building-jar-or-running-with-maven-command",children:"4. Specify which profile to use when building jar or running with maven command"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",children:"mvn -Puat clean package spring-boot:repackage\nmvn -Pproduction clean package spring-boot:repackage\nmvn -Puat clean spring-boot:run\nmvn -Pproduction clean spring-boot:run\n"})}),"\n",(0,r.jsx)(i.h2,{id:"mischellaneous",children:"Mischellaneous"}),"\n",(0,r.jsx)(i.h3,{id:"1-configure-main-class-and-classifier",children:"1. Configure main class and classifier"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",metastring:"title='pom.yml'",children:"  <profiles>\n      <profile>\n          <id>api-uat</id>\n          <properties>\n            <spring.profiles.active>api-uat</spring.profiles.active>\n            // highlight-next-line\n            <spring.boot.mainClass>org.irushu.ApiApplication</spring.boot.mainClass>\n            // highlight-next-line\n            <spring.boot.classifier>api-uat</spring.boot.classifier>\n          </properties>  \n      </profile>\t\n      <profile>\n          <id>daemon-uat</id>\n          <properties>\n            <spring.profiles.active>daemon-uat</spring.profiles.active>\n            // highlight-next-line\n            <spring.boot.mainClass>org.irushu.DaemonApplication</spring.boot.mainClass>\n            // highlight-next-line\n            <spring.boot.classifier>daemon-uat</spring.boot.classifier>\n          </properties>\n      </profile>\n  </profiles>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"2-configure-the-profile-of-a-java-component",children:"2. Configure the profile of a java component"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'// highlight-next-line\n@Profile({"api-uat", "api-prd"})\n@RestController\npublic class ApiController {\n  ...\n}  \n'})}),"\n",(0,r.jsx)(i.p,{children:"You can negate a profile so that only when these profiles are not present will the java class or component will take effect"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-java",children:'// highlight-next-line\n@Profile({"!api-prd", "!daemon-prd"})\n@RestController\npublic class TestController {\n  ...\n}  \n'})}),"\n",(0,r.jsx)(i.h3,{id:"3-configure-the-active-profile",children:"3: Configure the active profile"}),"\n",(0,r.jsxs)(i.p,{children:["Apart from pom.xml,  you may configure the active profile in environment variable ",(0,r.jsx)(i.code,{children:"SPRING_PROFILES_ACTIVE"})," or command-line arguments ",(0,r.jsx)(i.code,{children:"spring.profiles.active"})]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",metastring:'title="Environment variable"',children:"export SPRING_PROFILES_ACTIVE=api-uat\n"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-shell",metastring:'title="Command-line arguments"',children:"java -jar xxx.jar --spring.profiles.active=api-uat\n"})})]})}function d(e={}){const{wrapper:i}={...(0,o.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},1151:(e,i,n)=>{n.d(i,{Z:()=>s,a:()=>l});var r=n(7294);const o={},t=r.createContext(o);function l(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(t.Provider,{value:i},e.children)}}}]);