"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[4414],{2346:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=n(5893),i=n(1151);const r={sidebar_position:3},a="Redux Thunk",o={id:"react/react-thunk",title:"Redux Thunk",description:"Redux Thunk is a middleware (syntactic sugar / abstraction) that handles and dispatches async redux action.",source:"@site/docs/react/react-thunk.mdx",sourceDirName:"react",slug:"/react/react-thunk",permalink:"/Notesaurus/docs/react/react-thunk",draft:!1,unlisted:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/react/react-thunk.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Redux",permalink:"/Notesaurus/docs/react/redux-toolkit"},next:{title:"React i18n",permalink:"/Notesaurus/docs/react/react-i18n"}},c={},l=[{value:"Step by Step Guide",id:"step-by-step-guide",level:3},{value:"1. Define async action",id:"1-define-async-action",level:4},{value:"2. Define reducer and state for a slice",id:"2-define-reducer-and-state-for-a-slice",level:4},{value:"3. Add the slice to the store",id:"3-add-the-slice-to-the-store",level:4},{value:"4. Dispatch action within another action",id:"4-dispatch-action-within-another-action",level:4},{value:"5. Detect state change and rerender UI",id:"5-detect-state-change-and-rerender-ui",level:4},{value:"Reference",id:"reference",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"redux-thunk",children:"Redux Thunk"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-console",children:"npm install @reduxjs/toolkit\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Redux Thunk is a ",(0,s.jsx)(t.strong,{children:"middleware"})," (syntactic sugar / abstraction) that handles and dispatches async redux action."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)("img",{src:"https://redux.js.org/assets/images/ReduxAsyncDataFlowDiagram-d97ff38a0f4da0f327163170ccc13e80.gif",width:"350"}),"\n",(0,s.jsxs)(t.p,{children:["From ",(0,s.jsx)(t.a,{href:"https://redux.js.org/tutorials/fundamentals/part-6-async-logic",children:"Async Logic and Data Fetching in Redux official site"})]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"It contains only 14 lines of code. However it won't be used directly."}),"\n",(0,s.jsx)(t.p,{children:"Instead we will use Redux Toolkit, which have already integrated and enhanced Redux Thunk."}),"\n",(0,s.jsx)(t.h3,{id:"step-by-step-guide",children:"Step by Step Guide"}),"\n",(0,s.jsx)(t.h4,{id:"1-define-async-action",children:"1. Define async action"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"title='src/store/forex/ForexAsyncAction.js'",children:"import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\n{/* highlight-start */}\nconst forexAsync = createAsyncThunk( 'forex/started',  \n  async ( { } , { getState, rejectWithValue } ) => {\n{/* highlight-end */}    \n        const timeout = new Promise((_, reject) => setTimeout(reject, 10000)); \n        let axiosConfig = { url: 'xxxxxxxxxxxxxxx', baseURL: 'xxxxxxxxxxxxxxx',  method: \"GET\", };\n        const response = await Promise.race([timeout, axios.request(axiosConfig)])\n        if( response.status === 200)        \n        {/* highlight-start */}    \n            return response.data;\n        {/* highlight-end */}      \n        else\n        {/* highlight-start */}\n            return rejectWithValue ('Invalid system response.');\n        {/* highlight-end */}  \n});\n\nexport { forexAsync }\n"})}),"\n",(0,s.jsx)(t.h4,{id:"2-define-reducer-and-state-for-a-slice",children:"2. Define reducer and state for a slice"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"3 states: pending, fulfilled and rejected."}),"\n",(0,s.jsxs)(t.li,{children:["When the async action ",(0,s.jsx)(t.strong,{children:"forexAsync"})," is called, it will dispatch the action ",(0,s.jsx)(t.strong,{children:"forexAsync.pending"})," to the store."]}),"\n",(0,s.jsxs)(t.li,{children:["If rejectWithValue is called (in step 1), it will dispatch the action  ",(0,s.jsx)(t.strong,{children:"forexAsync.rejected"})," to the store."]}),"\n",(0,s.jsxs)(t.li,{children:["If the result is returned (in step 1), it will dispatch the action  ",(0,s.jsx)(t.strong,{children:"forexAsync.fulfilled"})," to the store."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"title='src/store/forex/index.js'",children:"import { createSlice } from '@reduxjs/toolkit'\nimport { forexAsync }  from './ForexAsyncAction'\n\nconst emptyForex = {};\nconst initialState = emptyForex \n\nconst forexSlice = createSlice({\n  name: 'forex',\n  initialState,\n  reducers: {\n    reset(state, action) {\n      state.isLoading = false\n      state.HKD = emptyForex\n    },\n    logout(state, action) {\n      state.isLoading = false\n      state.HKD = emptyForex\n    }\n  },\n  extraReducers: {\n    {/* highlight-start */}   \n    [forexAsync.pending]: (state, action) => {\n    {/* highlight-end */}       \n      state.isLoading = true\n    },\n    {/* highlight-start */}       \n    [forexAsync.fulfilled]: (state, action) => {\n    {/* highlight-end */}           \n      state.isLoading = false\n      state.HKD = action.payload\n    },\n    {/* highlight-start */}   \n    [forexAsync.rejected]: (state, action) => {\n    {/* highlight-end */}   \n      state.isLoading = false\n      if(action.payload) state.errorMessage = action.payload      \n      else state.errorMessage = action.error.message      \n    }\n  }\n})\n\nexport { forexSlice, forexAsync }\n"})}),"\n",(0,s.jsx)(t.h4,{id:"3-add-the-slice-to-the-store",children:"3. Add the slice to the store"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"title='src/store/index.js'",children:"import { configureStore } from '@reduxjs/toolkit'\nimport { localeSlice } from './locale'\nimport { forexSlice } from './forex'\n\nconst store = configureStore({\n  reducer: {\n    locale: localeSlice.reducer,\n    {/* highlight-start */}  \n    forex: forexSlice.reducer,\n    {/* highlight-end */} \n  },\n  devTools: false,\n  enhancers: null,\n})\n\nexport { store };\n"})}),"\n",(0,s.jsx)(t.h4,{id:"4-dispatch-action-within-another-action",children:"4. Dispatch action within another action"}),"\n",(0,s.jsx)(t.p,{children:"Apart from dispatching via UI event, this action can be dispatched within another action."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"title='src/store/login/Login2AsyncAction.js'",children:"import { forexAsync }  from '../forex'\n\nconst login2Async = createAsyncThunk( 'login/login2',  \n    async ( { username, password, loginSecurityCode } , { getState, dispatch, rejectWithValue } ) => {    \n    ...\n    {/* highlight-start */}\n    dispatch(forexAsync({}))\n    {/* highlight-end */} \n    ...\n});\n"})}),"\n",(0,s.jsx)(t.h4,{id:"5-detect-state-change-and-rerender-ui",children:"5. Detect state change and rerender UI"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"title='src/store/portofolio/PortfolioSummary.js'",children:"import { useSelector } from 'react-redux'\n\nconst PortfolioSummary = React.forwardRef(({ marketFilter}, ref) => {\n  {/* highlight-start */}\n  const forex = useSelector(state => state.forex);\n  {/* highlight-end */} \n\n  return(\n    <>\n    ...\n    </>\n  );\n});\n"})}),"\n",(0,s.jsx)(t.h3,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://github.com/reduxjs/redux-thunk",children:"Redux Thunk Official Site"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(7294);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);