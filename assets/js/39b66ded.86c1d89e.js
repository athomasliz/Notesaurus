"use strict";(self.webpackChunknotesaurus=self.webpackChunknotesaurus||[]).push([[432],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=m(a),d=i,c=s["".concat(p,".").concat(d)]||s[d]||k[d]||r;return a?n.createElement(c,l(l({ref:t},u),{},{components:a})):n.createElement(c,l({ref:t},u))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var m=2;m<r;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},3866:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>b,contentTitle:()=>g,default:()=>w,frontMatter:()=>y,metadata:()=>f,toc:()=>v});var n=a(7462),i=a(7294),r=a(3905),l=a(6010),o=a(2389),p=a(7392),m=a(7094),u=a(2466);const k="tabList__CuJ",s="tabItem_LNqP";function d(e){var t;const{lazy:a,block:r,defaultValue:o,values:d,groupId:c,className:N}=e,h=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=d??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),g=(0,p.l)(y,((e,t)=>e.value===t.value));if(g.length>0)throw new Error(`Docusaurus error: Duplicate values "${g.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==f&&!y.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:v}=(0,m.U)(),[C,w]=(0,i.useState)(f),S=[],{blockElementScrollPositionUntilNextRender:A}=(0,u.o5)();if(null!=c){const e=b[c];null!=e&&e!==C&&y.some((t=>t.value===e))&&w(e)}const E=e=>{const t=e.currentTarget,a=S.indexOf(t),n=y[a].value;n!==C&&(A(t),w(n),null!=c&&v(c,String(n)))},T=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;a=S[t]??S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;a=S[t]??S[S.length-1];break}}null==(t=a)||t.focus()};return i.createElement("div",{className:(0,l.Z)("tabs-container",k)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},N)},y.map((e=>{let{value:t,label:a,attributes:r}=e;return i.createElement("li",(0,n.Z)({role:"tab",tabIndex:C===t?0:-1,"aria-selected":C===t,key:t,ref:e=>S.push(e),onKeyDown:T,onFocus:E,onClick:E},r,{className:(0,l.Z)("tabs__item",s,null==r?void 0:r.className,{"tabs__item--active":C===t})}),a??t)}))),a?(0,i.cloneElement)(h.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==C})))))}function c(e){const t=(0,o.Z)();return i.createElement(d,(0,n.Z)({key:String(t)},e))}const N="tabItem_Ymn6";function h(e){let{children:t,hidden:a,className:n}=e;return i.createElement("div",{role:"tabpanel",className:(0,l.Z)(N,n),hidden:a},t)}const y={sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:3},g="Cryptography 101",f={unversionedId:"cryptography/101",id:"cryptography/101",title:"Cryptography 101",description:"",source:"@site/docs/cryptography/101.md",sourceDirName:"cryptography",slug:"/cryptography/101",permalink:"/Notesaurus/docs/cryptography/101",draft:!1,editUrl:"https://github.com/athomasliz/Notesaurus/tree/main/docs/cryptography/101.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Lesson 2:  Spring Kafka",permalink:"/Notesaurus/docs/kafka/spring-kafka"}},b={},v=[{value:"Terminology",id:"terminology",level:2},{value:"General",id:"general",level:3},{value:"Hash function",id:"hash-function",level:3},{value:"MAC - Message Authentication Code",id:"mac---message-authentication-code",level:3},{value:"Symmetric cryptography",id:"symmetric-cryptography",level:3},{value:"Key exchange",id:"key-exchange",level:3},{value:"Asymmetric cryptography",id:"asymmetric-cryptography",level:3},{value:"Digital Signature",id:"digital-signature",level:3},{value:"Randomness / Secrets",id:"randomness--secrets",level:3},{value:"<code>TLS</code> Transport layer security",id:"tls-transport-layer-security",level:3},{value:"Vocabuary",id:"vocabuary",level:2},{value:"Concept",id:"concept-1",level:2}],C={toc:v};function w(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},C,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cryptography-101"},"Cryptography 101"),(0,r.kt)("h2",{id:"terminology"},"Terminology"),(0,r.kt)("h3",{id:"general"},"General"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cryptographic_primitive"},"Primitive")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cryptographic_protocol"},"Protocol")),(0,r.kt)("li",{parentName:"ul"},"Cryptographer"),(0,r.kt)("li",{parentName:"ul"},"Cryptanalyst"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"NIST")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/National_Institute_of_Standards_and_Technology"},"National Institute of Standard and Technology")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"FIPS")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Federal_Information_Processing_Standards"},"Federal Information Processing Standards")),(0,r.kt)("li",{parentName:"ul"},"MITM (Man in the middle) Attack"))),(0,r.kt)("h3",{id:"hash-function"},"Hash function"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"input"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Message")),(0,r.kt)("h4",{parentName:"admonition",id:"output"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Digest / Hash")),(0,r.kt)("h4",{parentName:"admonition",id:"properties"},"Properties"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Pre-image resistance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"One way, irreversible"))),(0,r.kt)("li",{parentName:"ul"},"Second pre-image resistance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Given a fixed input, whether there exists another input that yields the same digest"))),(0,r.kt)("li",{parentName:"ul"},"Collision resistance",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Given any input, there exists a case that 2 inputs yields the same digest"),(0,r.kt)("li",{parentName:"ul"},"Birthday Bound")))),(0,r.kt)("h4",{parentName:"admonition",id:"algorithm"},"Algorithm"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"MD5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHA1")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHA2"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Merkie-Damgard"),(0,r.kt)("li",{parentName:"ul"},"Compression Function"),(0,r.kt)("li",{parentName:"ul"},"Length-extension attacks"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHA3")," ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Permutation"),(0,r.kt)("li",{parentName:"ul"},"Spongy Construction",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Absorbing"),(0,r.kt)("li",{parentName:"ul"},"Squeezing"))),(0,r.kt)("li",{parentName:"ul"},"Random Oracle"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SHAKE")," ",(0,r.kt)("inlineCode",{parentName:"li"},"cSHAKE")," ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"XOF - extendable output function"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TupleHash")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Argon2"},(0,r.kt)("inlineCode",{parentName:"a"},"Argon2"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/PBKDF2"},(0,r.kt)("inlineCode",{parentName:"a"},"PBKDF2"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Bcrypt"},(0,r.kt)("inlineCode",{parentName:"a"},"bcrypt"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Scrypt"},(0,r.kt)("inlineCode",{parentName:"a"},"scrypt")))),(0,r.kt)("h4",{parentName:"admonition",id:"attacks"},"Attacks"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Rainbow table"),(0,r.kt)("li",{parentName:"ul"},"Length-extension attacks"))),(0,r.kt)("h3",{id:"mac---message-authentication-code"},"MAC - Message Authentication Code"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"input-1"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Secret Key"),(0,r.kt)("li",{parentName:"ul"},"Message")),(0,r.kt)("h4",{parentName:"admonition",id:"output-1"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Authentication Tag")),(0,r.kt)("h4",{parentName:"admonition",id:"algorithms"},"Algorithms"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"HMAC",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"SHA2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HMAC-SHA256")))),(0,r.kt)("li",{parentName:"ul"},"KMAC",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"cSHAKE")))),(0,r.kt)("h4",{parentName:"admonition",id:"attacks-1"},"Attacks"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Timing Attack"),(0,r.kt)("li",{parentName:"ul"},"Replay Attack")),(0,r.kt)("h4",{parentName:"admonition",id:"use-case"},"Use case"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Message Authentication"),(0,r.kt)("li",{parentName:"ul"},"HKDF - HMAC based key derivation function"),(0,r.kt)("li",{parentName:"ul"},"PRF - Pseudorandom function"),(0,r.kt)("li",{parentName:"ul"},"Cookie authentication tag"),(0,r.kt)("li",{parentName:"ul"},"Hash Table (Programming Languages)"))),(0,r.kt)("h3",{id:"symmetric-cryptography"},"Symmetric cryptography"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"aka"},"a.k.a"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Secret Key Cryptography")),(0,r.kt)(c,{mdxType:"Tabs"},(0,r.kt)(h,{value:"Encryption",label:"Encryption",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-2"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Our secret key"),(0,r.kt)("li",{parentName:"ul"},"Plain text")),(0,r.kt)("h4",{parentName:"admonition",id:"output-2"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Cipher text"))),(0,r.kt)(h,{value:"Decryption",label:"Decryption",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-3"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Our secret key"),(0,r.kt)("li",{parentName:"ul"},"Cipher text")),(0,r.kt)("h4",{parentName:"admonition",id:"output-3"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Plain text ")))),(0,r.kt)("h4",{parentName:"admonition",id:"algorithms-1"},"Algorithms"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"AES (Advanced Encryption Standard)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Block cipher"),(0,r.kt)("li",{parentName:"ul"},"Permutation",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"State"),(0,r.kt)("li",{parentName:"ul"},"Reversible"))),(0,r.kt)("li",{parentName:"ul"},"Deterministic"),(0,r.kt)("li",{parentName:"ul"},"Round function"),(0,r.kt)("li",{parentName:"ul"},"Diffusion",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Avalanche effect"))),(0,r.kt)("li",{parentName:"ul"},"Bit Security      "),(0,r.kt)("li",{parentName:"ul"},"XOR - exclusive OR "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PKCS#7")," padding "))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AES-ECB")," (Electronic codebook)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ECB encrypted penguin"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AES-CBC")," (Cipher block chaining)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"IV - Initialization Vector",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"unpredicatable, random"),(0,r.kt)("li",{parentName:"ul"},"BEAST (Browser Exploit Against SSL/TLS) attack"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AES-CBC-HMAC"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Encrypt-then-MAC "))),(0,r.kt)("li",{parentName:"ul"},"AEAD (Authenticated Encryption with Associated Data)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Galois/Counter_Mode"},(0,r.kt)("inlineCode",{parentName:"a"},"AES-GCM")," (Galois / Counter Mode)")," ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"AES-CTR",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Nounce"),(0,r.kt)("li",{parentName:"ul"},"Stream Cipher"))),(0,r.kt)("li",{parentName:"ul"},"GMAC",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"AXU - XORed universal hash"),(0,r.kt)("li",{parentName:"ul"},"DUF - Difference unpredictable function"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/ChaCha20-Poly1305"},(0,r.kt)("inlineCode",{parentName:"a"},"ChaCha20-Poly1305"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Adiantum_(cipher)"},(0,r.kt)("inlineCode",{parentName:"a"},"Adiantum"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Disk_encryption_theory#XTS"},(0,r.kt)("inlineCode",{parentName:"a"},"AES-XTS"))))),(0,r.kt)("h3",{id:"key-exchange"},"Key exchange"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"algorithms-2"},"Algorithms"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DH")," - Diffie-Hellman key exchange"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ECDH")," - Elliptic Curve Diffie-Hellman key exchange"))),(0,r.kt)("h3",{id:"asymmetric-cryptography"},"Asymmetric cryptography"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"aka-1"},"a.k.a"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Public key cryptography")),(0,r.kt)(c,{mdxType:"Tabs"},(0,r.kt)(h,{value:"Encryption",label:"Encryption",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-4"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"His public key"),(0,r.kt)("li",{parentName:"ul"},"Plain text")),(0,r.kt)("h4",{parentName:"admonition",id:"output-4"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Cipher text"))),(0,r.kt)(h,{value:"Decryption",label:"Decryption",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-5"},"Input"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"My private key"),(0,r.kt)("li",{parentName:"ul"},"Cipher text")),(0,r.kt)("h4",{parentName:"admonition",id:"output-5"},"Output"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Plain text ")))),(0,r.kt)("h4",{parentName:"admonition",id:"use-case-1"},"Use Case"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Hybrid encryption",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"KEM - Key encapsulation mechanism"),(0,r.kt)("li",{parentName:"ul"},"DEM - Data encapsulation mechanism  ")))),(0,r.kt)("h4",{parentName:"admonition",id:"algorithms-3"},"Algorithms"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSA PKCS#1 v1.5"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Million message attack"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSA OAEP")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ECIES")," Elliptic Curve Integrated Encryption Scheme ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ephemeral key pair")))),(0,r.kt)("h4",{parentName:"admonition",id:"attacks-2"},"Attacks"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Million message attack"))),(0,r.kt)("h3",{id:"digital-signature"},"Digital Signature"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)(c,{mdxType:"Tabs"},(0,r.kt)(h,{value:"Sign",label:"Sign",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-sign"},"Input (Sign)"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"My private key"),(0,r.kt)("li",{parentName:"ul"},"Payload")),(0,r.kt)("h4",{parentName:"admonition",id:"output-sign"},"Output (Sign)"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"My Signature"))),(0,r.kt)(h,{value:"Verify",label:"Verify",mdxType:"TabItem"},(0,r.kt)("h4",{parentName:"admonition",id:"input-verify"},"Input (Verify)"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"His public key"),(0,r.kt)("li",{parentName:"ul"},"Payload")),(0,r.kt)("h4",{parentName:"admonition",id:"output-verify"},"Output (Verify)"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Calculated Signature = Received Signature from him")))),(0,r.kt)("h4",{parentName:"admonition",id:"concept"},"Concept"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Transitive Trust"),(0,r.kt)("li",{parentName:"ul"},"Zero-knowledge Proof"),(0,r.kt)("li",{parentName:"ul"},"PKI - Public key infrastructure ")),(0,r.kt)("h4",{parentName:"admonition",id:"algorithms-4"},"Algorithms"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"RSA-PSS")," "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ECDSA")," Elliptic Curve Digital Signature Algorithm"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"EdDSA")," EdDSA Edwards-curve Digital Signature Algorithm")),(0,r.kt)("h4",{parentName:"admonition",id:"attacks-3"},"Attacks"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Substitution attacks",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Key substitution attacks"),(0,r.kt)("li",{parentName:"ul"},"Message key substitution attacks"))),(0,r.kt)("li",{parentName:"ul"},"Signature malleability"))),(0,r.kt)("h3",{id:"randomness--secrets"},"Randomness / Secrets"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Entropy"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"TRNG")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Hardware_random_number_generator"},"True random number generator"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"a.k.a: ",(0,r.kt)("inlineCode",{parentName:"li"},"HRNG")," Hardware random number generator"),(0,r.kt)("li",{parentName:"ul"},"Input: Entrophy from physical process"),(0,r.kt)("li",{parentName:"ul"},"Output: Random number"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"PRNG")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Pseudorandom_number_generator"},"Pseudorandom number generator"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Input: Seed"),(0,r.kt)("li",{parentName:"ul"},"Output: Random number"),(0,r.kt)("li",{parentName:"ul"},"Forward / Backward secrecy"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"VRF")," ",(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Verifiable_random_function"},"Verifiable random function"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Steps for generation",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Input",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"My private key"),(0,r.kt)("li",{parentName:"ul"},"Prepare a seed"))),(0,r.kt)("li",{parentName:"ul"},"Ouptput",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Signature - use my private key to sign the seed to get (Sign)"),(0,r.kt)("li",{parentName:"ul"},"Random number - hash the seed (MAC)"))))),(0,r.kt)("li",{parentName:"ul"},"Verification",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"use his public key to verify the seed (Verify)"),(0,r.kt)("li",{parentName:"ul"},"Hash the seed should get the random number (MAC)"))))))),(0,r.kt)("h3",{id:"tls-transport-layer-security"},(0,r.kt)("inlineCode",{parentName:"h3"},"TLS")," Transport layer security"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("h4",{parentName:"admonition",id:"aka-2"},"a.k.a"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SSL")," Secure socket layer")),(0,r.kt)("h4",{parentName:"admonition",id:"life-cycle"},"Life Cycle"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Handshake",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Key exchange",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"negotiate what kind of algorithms will be used",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"ClientHello        ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"key exchange"),(0,r.kt)("li",{parentName:"ul"},"digital signature"),(0,r.kt)("li",{parentName:"ul"},"hash function (unrelated to digital signature)"),(0,r.kt)("li",{parentName:"ul"},"authenticated encryption"))),(0,r.kt)("li",{parentName:"ul"},"ServerHello"),(0,r.kt)("li",{parentName:"ul"},"HelloRetryRequest"))))),(0,r.kt)("li",{parentName:"ul"},"Authentication",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Finished Message (contains authentication tag that hash all message by HMAC)"))))),(0,r.kt)("li",{parentName:"ul"},"Post handshake",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Session resumption",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"PSK - pre-shared key")))))),(0,r.kt)("h4",{parentName:"admonition",id:"mutually-authenticated-tls"},"Mutually-authenticated TLS"),(0,r.kt)("h4",{parentName:"admonition",id:"pki-public-key-infrastructure"},"PKI Public key infrastructure"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"CA - Certificate Authority",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Root CA"),(0,r.kt)("li",{parentName:"ul"},"Intermediate CA"))),(0,r.kt)("li",{parentName:"ul"},"Leaf Certificate"),(0,r.kt)("li",{parentName:"ul"},"X.509 Certificate"),(0,r.kt)("li",{parentName:"ul"},"Misbehaving CA",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Certificate / Public Key Pinning "),(0,r.kt)("li",{parentName:"ul"},"Certificate Revocation List"),(0,r.kt)("li",{parentName:"ul"},"OCSP - Online Certificate Status Protocol"),(0,r.kt)("li",{parentName:"ul"},"OCSP stapling"))))),(0,r.kt)("h2",{id:"vocabuary"},"Vocabuary"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Forge")," a signature                                "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Impersonate")," someone                              "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Tamper")," the message                               "),(0,r.kt)("li",{parentName:"ul"},"Security via ",(0,r.kt)("strong",{parentName:"li"},"obscurity"),"                           "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Encrypt")," a ",(0,r.kt)("strong",{parentName:"li"},"plain text"),"                         "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Decrypt")," a ",(0,r.kt)("strong",{parentName:"li"},"cipher text"),"                        "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sign")," the message                                 "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Verify")," the signature                             ")),(0,r.kt)("h2",{id:"concept-1"},"Concept"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'Hash is a one way, non-reversible function. Never ask "How can I decrypt my password stored in our database?". We won\'t encrypt password and store in the database. We usually hash password with salt (for randomness) and appropriate hash function ( like Argon2, Bcrypt etc. These algorithm makes the hash calculation slow, RAM intensive so that hacker is difficult to crack the passwords in short time by brute force) and put in the database.'),(0,r.kt)("li",{parentName:"ul"},"Never hash with SHA2, especially on MAC or secret. Use HMAC always."),(0,r.kt)("li",{parentName:"ul"},"Below is the process of using asymmetric cryptography.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Key exchange")," between sender A and receiver B",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A generates key pair, B generates key pair. or using DH or ECDH."),(0,r.kt)("li",{parentName:"ul"},"A and B sends each other their own public key. A holds B's public key. B holds A's public key. "),(0,r.kt)("li",{parentName:"ul"},"Private key will be kept by yourself, and never be sent to anyone."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Encrypt and Sign")," By A",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A encrypts plain text (The target is usually small size symmetric key, which will then become hybrid encryption) with B's public key to produce cipher text."),(0,r.kt)("li",{parentName:"ul"},"A signs something (depends on the protocol) with A's private key to produce digital signature. "))),(0,r.kt)("li",{parentName:"ul"},"A sends B ",(0,r.kt)("strong",{parentName:"li"},"cipher text")," and ",(0,r.kt)("strong",{parentName:"li"},"signature"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Decrypt and Verify")," By B   ",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"B verifies the signature with A's public key."),(0,r.kt)("li",{parentName:"ul"},"B decrypts the cipher text with B's private key to produce plain text.   "))))),(0,r.kt)("li",{parentName:"ul"},"Asymmetric Encryption encrypts data of limited size (e.g. at most 245 byte for RSA PKCS#1 v1.5 with 2048 bit key). That is why hybrid encryption is needed."),(0,r.kt)("li",{parentName:"ul"},"For those complex theories and algorithms in cryptography ... to a software engineer but not a cryptanalyst, they are good to know but not a must. What a software engineer must know is, for security's sake, which algorithm, primitive and protocol is safe and suitable for him to use, and what standards and best practices he must pay attention and follow.")))}w.isMDXComponent=!0}}]);